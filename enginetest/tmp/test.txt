# The join condition logic is tricky to get right with NULL
# values. Simple implementations can deal well with NULLs on the first
# or last row but fail to handle them in the middle. So the test table
# must contain at least 3 rows with a null in the middle. This test
# table also contains the pair 44/42 so that a test with a non-trivial
# ON condition can be written.
statement ok
CREATE TABLE onecolumn (x INT)

statement ok
INSERT INTO onecolumn(x) VALUES (44), (NULL), (42)

query II nosort
SELECT a.x as x, b.x as y FROM onecolumn AS a CROSS JOIN onecolumn AS b ORDER BY x, y
----
NULL
NULL
NULL
42
NULL
44
42
NULL
42
42
42
44
44
NULL
44
42
44
44

query error column reference "x" is ambiguous \(candidates: a.x, b.x\)
SELECT x FROM onecolumn AS a, onecolumn AS b

