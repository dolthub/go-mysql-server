// Code generated by "stringer -type=IndexScanOp -linecomment"; DO NOT EDIT.

package analyzer

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[IndexScanOpEq-0]
	_ = x[IndexScanOpNullSafeEq-1]
	_ = x[IndexScanOpInSet-2]
	_ = x[IndexScanOpNotInSet-3]
	_ = x[IndexScanOpNotEq-4]
	_ = x[IndexScanOpGt-5]
	_ = x[IndexScanOpGte-6]
	_ = x[IndexScanOpLt-7]
	_ = x[IndexScanOpLte-8]
	_ = x[IndexScanOpAnd-9]
	_ = x[IndexScanOpOr-10]
	_ = x[IndexScanOpIsNull-11]
	_ = x[IndexScanOpIsNotNull-12]
	_ = x[IndexScanOpSpatialEq-13]
	_ = x[IndexScanOpFulltextEq-14]
}

const _IndexScanOp_name = "=<=>=!=!=>>=<<=&&||IS NULLIS NOT NULLSpatialEqFulltextEq"

var _IndexScanOp_index = [...]uint8{0, 1, 4, 5, 7, 9, 10, 12, 13, 15, 17, 19, 26, 37, 46, 56}

func (i IndexScanOp) String() string {
	if i >= IndexScanOp(len(_IndexScanOp_index)-1) {
		return "IndexScanOp(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _IndexScanOp_name[_IndexScanOp_index[i]:_IndexScanOp_index[i+1]]
}
