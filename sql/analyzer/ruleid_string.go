// Code generated by "stringer -type=RuleId -linecomment"; DO NOT EDIT.

package analyzer

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[applyDefaultSelectLimitId-0]
	_ = x[validateOffsetAndLimitId-1]
	_ = x[validateCreateTableId-2]
	_ = x[validateExprSemId-3]
	_ = x[resolveVariablesId-4]
	_ = x[resolveNamedWindowsId-5]
	_ = x[resolveSetVariablesId-6]
	_ = x[resolveViewsId-7]
	_ = x[liftCtesId-8]
	_ = x[resolveCtesId-9]
	_ = x[liftRecursiveCtesId-10]
	_ = x[resolveDatabasesId-11]
	_ = x[resolveTablesId-12]
	_ = x[loadStoredProceduresId-13]
	_ = x[validateDropTablesId-14]
	_ = x[setTargetSchemasId-15]
	_ = x[resolveCreateLikeId-16]
	_ = x[parseColumnDefaultsId-17]
	_ = x[resolveDropConstraintId-18]
	_ = x[validateDropConstraintId-19]
	_ = x[loadCheckConstraintsId-20]
	_ = x[assignCatalogId-21]
	_ = x[resolveAnalyzeTablesId-22]
	_ = x[resolveCreateSelectId-23]
	_ = x[resolveSubqueriesId-24]
	_ = x[setViewTargetSchemaId-25]
	_ = x[resolveUnionsId-26]
	_ = x[resolveDescribeQueryId-27]
	_ = x[checkUniqueTableNamesId-28]
	_ = x[resolveTableFunctionsId-29]
	_ = x[resolveDeclarationsId-30]
	_ = x[resolveColumnDefaultsId-31]
	_ = x[validateColumnDefaultsId-32]
	_ = x[validateCreateTriggerId-33]
	_ = x[validateCreateProcedureId-34]
	_ = x[loadInfoSchemaId-35]
	_ = x[validateReadOnlyDatabaseId-36]
	_ = x[validateReadOnlyTransactionId-37]
	_ = x[validateDatabaseSetId-38]
	_ = x[validatePrivilegesId-39]
	_ = x[reresolveTablesId-40]
	_ = x[transformJoinApplyId-41]
	_ = x[setInsertColumnsId-42]
	_ = x[validateJoinComplexityId-43]
	_ = x[applyBinlogReplicaControllerId-44]
	_ = x[resolveNaturalJoinsId-45]
	_ = x[resolveOrderbyLiteralsId-46]
	_ = x[resolveFunctionsId-47]
	_ = x[flattenTableAliasesId-48]
	_ = x[pushdownSortId-49]
	_ = x[pushdownGroupbyAliasesId-50]
	_ = x[pushdownSubqueryAliasFiltersId-51]
	_ = x[qualifyColumnsId-52]
	_ = x[resolveColumnsId-53]
	_ = x[validateCheckConstraintId-54]
	_ = x[resolveBarewordSetVariablesId-55]
	_ = x[expandStarsId-56]
	_ = x[transposeRightJoinsId-57]
	_ = x[resolveHavingId-58]
	_ = x[mergeUnionSchemasId-59]
	_ = x[flattenAggregationExprsId-60]
	_ = x[reorderProjectionId-61]
	_ = x[resolveSubqueryExprsId-62]
	_ = x[replaceCrossJoinsId-63]
	_ = x[moveJoinCondsToFilterId-64]
	_ = x[evalFilterId-65]
	_ = x[optimizeDistinctId-66]
	_ = x[finalizeSubqueriesId-67]
	_ = x[finalizeUnionsId-68]
	_ = x[loadTriggersId-69]
	_ = x[processTruncateId-70]
	_ = x[resolveAlterColumnId-71]
	_ = x[resolveGeneratorsId-72]
	_ = x[removeUnnecessaryConvertsId-73]
	_ = x[pruneColumnsId-74]
	_ = x[stripTableNameInDefaultsId-75]
	_ = x[hoistSelectExistsId-76]
	_ = x[optimizeJoinsId-77]
	_ = x[concatFiltersId-78]
	_ = x[pushdownFiltersId-79]
	_ = x[subqueryIndexesId-80]
	_ = x[pruneTablesId-81]
	_ = x[setJoinScopeLenId-82]
	_ = x[eraseProjectionId-83]
	_ = x[replaceSortPkId-84]
	_ = x[insertTopNId-85]
	_ = x[applyHashInId-86]
	_ = x[resolveInsertRowsId-87]
	_ = x[resolvePreparedInsertId-88]
	_ = x[applyTriggersId-89]
	_ = x[applyProceduresId-90]
	_ = x[assignRoutinesId-91]
	_ = x[modifyUpdateExprsForJoinId-92]
	_ = x[applyRowUpdateAccumulatorsId-93]
	_ = x[wrapWithRollbackId-94]
	_ = x[applyFKsId-95]
	_ = x[validateResolvedId-96]
	_ = x[validateOrderById-97]
	_ = x[validateGroupById-98]
	_ = x[validateSchemaSourceId-99]
	_ = x[validateIndexCreationId-100]
	_ = x[validateOperandsId-101]
	_ = x[validateCaseResultTypesId-102]
	_ = x[validateIntervalUsageId-103]
	_ = x[validateExplodeUsageId-104]
	_ = x[validateSubqueryColumnsId-105]
	_ = x[validateUnionSchemasMatchId-106]
	_ = x[validateAggregationsId-107]
	_ = x[normalizeSelectSingleRelId-108]
	_ = x[cacheSubqueryResultsId-109]
	_ = x[cacheSubqueryAliasesInJoinsId-110]
	_ = x[AutocommitId-111]
	_ = x[TrackProcessId-112]
	_ = x[parallelizeId-113]
	_ = x[clearWarningsId-114]
}

const _RuleId_name = "applyDefaultSelectLimitvalidateOffsetAndLimitvalidateCreateTablevalidateExprSemresolveVariablesresolveNamedWindowsresolveSetVariablesresolveViewsliftCtesresolveCtesliftRecursiveCtesresolveDatabasesresolveTablesloadStoredProceduresvalidateDropTablessetTargetSchemasresolveCreateLikeparseColumnDefaultsresolveDropConstraintvalidateDropConstraintloadCheckConstraintsassignCatalogresolveAnalyzeTablesresolveCreateSelectresolveSubqueriessetViewTargetSchemaresolveUnionsresolveDescribeQuerycheckUniqueTableNamesresolveTableFunctionsresolveDeclarationsresolveColumnDefaultsvalidateColumnDefaultsvalidateCreateTriggervalidateCreateProcedureloadInfoSchemavalidateReadOnlyDatabasevalidateReadOnlyTransactionvalidateDatabaseSetvalidatePrivilegesreresolveTablestransformJoinApplysetInsertColumnsvalidateJoinComplexityapplyBinlogReplicaControllerresolveNaturalJoinsresolveOrderbyLiteralsresolveFunctionsflattenTableAliasespushdownSortpushdownGroupbyAliasespushdownSubqueryAliasFiltersqualifyColumnsresolveColumnsvalidateCheckConstraintresolveBarewordSetVariablesexpandStarstransposeRightJoinsresolveHavingmergeUnionSchemasflattenAggregationExprsreorderProjectionresolveSubqueryExprsreplaceCrossJoinsmoveJoinCondsToFilterevalFilteroptimizeDistinctfinalizeSubqueriesfinalizeUnionsloadTriggersprocessTruncateresolveAlterColumnresolveGeneratorsremoveUnnecessaryConvertspruneColumnsstripTableNamesFromColumnDefaultshoistSelectExistsoptimizeJoinsconcatFilterspushdownFilterssubqueryIndexespruneTablessetJoinScopeLeneraseProjectionreplaceSortPkinsertTopNapplyHashInresolveInsertRowsresolvePreparedInsertapplyTriggersapplyProceduresassignRoutinesmodifyUpdateExprsForJoinapplyRowUpdateAccumulatorsrollback triggersapplyFKsvalidateResolvedvalidateOrderByvalidateGroupByvalidateSchemaSourcevalidateIndexCreationvalidateOperandsvalidateCaseResultTypesvalidateIntervalUsagevalidateExplodeUsagevalidateSubqueryColumnsvalidateUnionSchemasMatchvalidateAggregationsnormalizeSelectSingleRelcacheSubqueryResultscacheSubqueryAliasesInJoinsaddAutocommitNodetrackProcessparallelizeclearWarnings"

var _RuleId_index = [...]uint16{0, 23, 45, 64, 79, 95, 114, 133, 145, 153, 164, 181, 197, 210, 230, 248, 264, 281, 300, 321, 343, 363, 376, 396, 415, 432, 451, 464, 484, 505, 526, 545, 566, 588, 609, 632, 646, 670, 697, 716, 734, 749, 767, 783, 805, 833, 852, 874, 890, 909, 921, 943, 971, 985, 999, 1022, 1049, 1060, 1079, 1092, 1109, 1132, 1149, 1169, 1186, 1207, 1217, 1233, 1251, 1265, 1277, 1292, 1310, 1327, 1352, 1364, 1397, 1414, 1427, 1440, 1455, 1470, 1481, 1496, 1511, 1524, 1534, 1545, 1562, 1583, 1596, 1611, 1625, 1649, 1675, 1692, 1700, 1716, 1731, 1746, 1766, 1787, 1803, 1826, 1847, 1867, 1890, 1915, 1935, 1959, 1979, 2006, 2023, 2035, 2046, 2059}

func (i RuleId) String() string {
	if i < 0 || i >= RuleId(len(_RuleId_index)-1) {
		return "RuleId(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RuleId_name[_RuleId_index[i]:_RuleId_index[i+1]]
}
