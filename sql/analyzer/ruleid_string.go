// Code generated by "stringer -type=RuleId -linecomment"; DO NOT EDIT.

package analyzer

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[applyDefaultSelectLimitId-0]
	_ = x[validateOffsetAndLimitId-1]
	_ = x[validateCreateTableId-2]
	_ = x[validateExprSemId-3]
	_ = x[resolveVariablesId-4]
	_ = x[resolveNamedWindowsId-5]
	_ = x[resolveSetVariablesId-6]
	_ = x[resolveViewsId-7]
	_ = x[liftCtesId-8]
	_ = x[resolveCtesId-9]
	_ = x[liftRecursiveCtesId-10]
	_ = x[resolveDatabasesId-11]
	_ = x[resolveTablesId-12]
	_ = x[loadStoredProceduresId-13]
	_ = x[validateDropTablesId-14]
	_ = x[setTargetSchemasId-15]
	_ = x[resolveCreateLikeId-16]
	_ = x[parseColumnDefaultsId-17]
	_ = x[resolveDropConstraintId-18]
	_ = x[validateDropConstraintId-19]
	_ = x[loadCheckConstraintsId-20]
	_ = x[assignCatalogId-21]
	_ = x[resolveAnalyzeTablesId-22]
	_ = x[resolveCreateSelectId-23]
	_ = x[resolveSubqueriesId-24]
	_ = x[setViewTargetSchemaId-25]
	_ = x[resolveUnionsId-26]
	_ = x[resolveDescribeQueryId-27]
	_ = x[checkUniqueTableNamesId-28]
	_ = x[resolveTableFunctionsId-29]
	_ = x[resolveDeclarationsId-30]
	_ = x[resolveColumnDefaultsId-31]
	_ = x[validateColumnDefaultsId-32]
	_ = x[validateCreateTriggerId-33]
	_ = x[validateCreateProcedureId-34]
	_ = x[loadInfoSchemaId-35]
	_ = x[validateReadOnlyDatabaseId-36]
	_ = x[validateReadOnlyTransactionId-37]
	_ = x[validateDatabaseSetId-38]
	_ = x[validatePrivilegesId-39]
	_ = x[reresolveTablesId-40]
	_ = x[transformJoinApplyId-41]
	_ = x[setInsertColumnsId-42]
	_ = x[validateJoinComplexityId-43]
	_ = x[applyBinlogReplicaControllerId-44]
	_ = x[resolveNaturalJoinsId-45]
	_ = x[resolveOrderbyLiteralsId-46]
	_ = x[resolveFunctionsId-47]
	_ = x[flattenTableAliasesId-48]
	_ = x[pushdownSortId-49]
	_ = x[pushdownGroupbyAliasesId-50]
	_ = x[pushdownSubqueryAliasFiltersId-51]
	_ = x[qualifyColumnsId-52]
	_ = x[resolveColumnsId-53]
	_ = x[validateCheckConstraintId-54]
	_ = x[resolveBarewordSetVariablesId-55]
	_ = x[replaceCountStarId-56]
	_ = x[expandStarsId-57]
	_ = x[transposeRightJoinsId-58]
	_ = x[resolveHavingId-59]
	_ = x[mergeUnionSchemasId-60]
	_ = x[flattenAggregationExprsId-61]
	_ = x[reorderProjectionId-62]
	_ = x[resolveSubqueryExprsId-63]
	_ = x[replaceCrossJoinsId-64]
	_ = x[moveJoinCondsToFilterId-65]
	_ = x[evalFilterId-66]
	_ = x[optimizeDistinctId-67]
	_ = x[finalizeSubqueriesId-68]
	_ = x[finalizeUnionsId-69]
	_ = x[loadTriggersId-70]
	_ = x[processTruncateId-71]
	_ = x[resolveAlterColumnId-72]
	_ = x[resolveGeneratorsId-73]
	_ = x[removeUnnecessaryConvertsId-74]
	_ = x[pruneColumnsId-75]
	_ = x[stripTableNameInDefaultsId-76]
	_ = x[hoistSelectExistsId-77]
	_ = x[optimizeJoinsId-78]
	_ = x[concatFiltersId-79]
	_ = x[pushdownFiltersId-80]
	_ = x[subqueryIndexesId-81]
	_ = x[pruneTablesId-82]
	_ = x[setJoinScopeLenId-83]
	_ = x[eraseProjectionId-84]
	_ = x[replaceSortPkId-85]
	_ = x[insertTopNId-86]
	_ = x[applyHashInId-87]
	_ = x[resolveInsertRowsId-88]
	_ = x[resolvePreparedInsertId-89]
	_ = x[applyTriggersId-90]
	_ = x[applyProceduresId-91]
	_ = x[assignRoutinesId-92]
	_ = x[modifyUpdateExprsForJoinId-93]
	_ = x[applyRowUpdateAccumulatorsId-94]
	_ = x[wrapWithRollbackId-95]
	_ = x[applyFKsId-96]
	_ = x[validateResolvedId-97]
	_ = x[validateOrderById-98]
	_ = x[validateGroupById-99]
	_ = x[validateSchemaSourceId-100]
	_ = x[validateIndexCreationId-101]
	_ = x[validateOperandsId-102]
	_ = x[validateCaseResultTypesId-103]
	_ = x[validateIntervalUsageId-104]
	_ = x[validateExplodeUsageId-105]
	_ = x[validateSubqueryColumnsId-106]
	_ = x[validateUnionSchemasMatchId-107]
	_ = x[validateAggregationsId-108]
	_ = x[normalizeSelectSingleRelId-109]
	_ = x[cacheSubqueryResultsId-110]
	_ = x[cacheSubqueryAliasesInJoinsId-111]
	_ = x[AutocommitId-112]
	_ = x[TrackProcessId-113]
	_ = x[parallelizeId-114]
	_ = x[clearWarningsId-115]
}

const _RuleId_name = "applyDefaultSelectLimitvalidateOffsetAndLimitvalidateCreateTablevalidateExprSemresolveVariablesresolveNamedWindowsresolveSetVariablesresolveViewsliftCtesresolveCtesliftRecursiveCtesresolveDatabasesresolveTablesloadStoredProceduresvalidateDropTablessetTargetSchemasresolveCreateLikeparseColumnDefaultsresolveDropConstraintvalidateDropConstraintloadCheckConstraintsassignCatalogresolveAnalyzeTablesresolveCreateSelectresolveSubqueriessetViewTargetSchemaresolveUnionsresolveDescribeQuerycheckUniqueTableNamesresolveTableFunctionsresolveDeclarationsresolveColumnDefaultsvalidateColumnDefaultsvalidateCreateTriggervalidateCreateProcedureloadInfoSchemavalidateReadOnlyDatabasevalidateReadOnlyTransactionvalidateDatabaseSetvalidatePrivilegesreresolveTablestransformJoinApplysetInsertColumnsvalidateJoinComplexityapplyBinlogReplicaControllerresolveNaturalJoinsresolveOrderbyLiteralsresolveFunctionsflattenTableAliasespushdownSortpushdownGroupbyAliasespushdownSubqueryAliasFiltersqualifyColumnsresolveColumnsvalidateCheckConstraintresolveBarewordSetVariablesreplaceCountStarexpandStarstransposeRightJoinsresolveHavingmergeUnionSchemasflattenAggregationExprsreorderProjectionresolveSubqueryExprsreplaceCrossJoinsmoveJoinCondsToFilterevalFilteroptimizeDistinctfinalizeSubqueriesfinalizeUnionsloadTriggersprocessTruncateresolveAlterColumnresolveGeneratorsremoveUnnecessaryConvertspruneColumnsstripTableNamesFromColumnDefaultshoistSelectExistsoptimizeJoinsconcatFilterspushdownFilterssubqueryIndexespruneTablessetJoinScopeLeneraseProjectionreplaceSortPkinsertTopNapplyHashInresolveInsertRowsresolvePreparedInsertapplyTriggersapplyProceduresassignRoutinesmodifyUpdateExprsForJoinapplyRowUpdateAccumulatorsrollback triggersapplyFKsvalidateResolvedvalidateOrderByvalidateGroupByvalidateSchemaSourcevalidateIndexCreationvalidateOperandsvalidateCaseResultTypesvalidateIntervalUsagevalidateExplodeUsagevalidateSubqueryColumnsvalidateUnionSchemasMatchvalidateAggregationsnormalizeSelectSingleRelcacheSubqueryResultscacheSubqueryAliasesInJoinsaddAutocommitNodetrackProcessparallelizeclearWarnings"

var _RuleId_index = [...]uint16{0, 23, 45, 64, 79, 95, 114, 133, 145, 153, 164, 181, 197, 210, 230, 248, 264, 281, 300, 321, 343, 363, 376, 396, 415, 432, 451, 464, 484, 505, 526, 545, 566, 588, 609, 632, 646, 670, 697, 716, 734, 749, 767, 783, 805, 833, 852, 874, 890, 909, 921, 943, 971, 985, 999, 1022, 1049, 1065, 1076, 1095, 1108, 1125, 1148, 1165, 1185, 1202, 1223, 1233, 1249, 1267, 1281, 1293, 1308, 1326, 1343, 1368, 1380, 1413, 1430, 1443, 1456, 1471, 1486, 1497, 1512, 1527, 1540, 1550, 1561, 1578, 1599, 1612, 1627, 1641, 1665, 1691, 1708, 1716, 1732, 1747, 1762, 1782, 1803, 1819, 1842, 1863, 1883, 1906, 1931, 1951, 1975, 1995, 2022, 2039, 2051, 2062, 2075}

func (i RuleId) String() string {
	if i < 0 || i >= RuleId(len(_RuleId_index)-1) {
		return "RuleId(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RuleId_name[_RuleId_index[i]:_RuleId_index[i+1]]
}
