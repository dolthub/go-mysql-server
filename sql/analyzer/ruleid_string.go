// Code generated by "stringer -type=RuleId -linecomment"; DO NOT EDIT.

package analyzer

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[applyDefaultSelectLimitId-0]
	_ = x[validateOffsetAndLimitId-1]
	_ = x[validateStarExpressionsId-2]
	_ = x[validateCreateTableId-3]
	_ = x[validateAlterTableId-4]
	_ = x[validateExprSemId-5]
	_ = x[resolveVariablesId-6]
	_ = x[resolveNamedWindowsId-7]
	_ = x[resolveSetVariablesId-8]
	_ = x[resolveViewsId-9]
	_ = x[liftCtesId-10]
	_ = x[resolveCtesId-11]
	_ = x[liftRecursiveCtesId-12]
	_ = x[resolveDatabasesId-13]
	_ = x[resolveTablesId-14]
	_ = x[loadStoredProceduresId-15]
	_ = x[validateDropTablesId-16]
	_ = x[pruneDropTablesId-17]
	_ = x[setTargetSchemasId-18]
	_ = x[resolveCreateLikeId-19]
	_ = x[parseColumnDefaultsId-20]
	_ = x[resolveDropConstraintId-21]
	_ = x[validateDropConstraintId-22]
	_ = x[loadCheckConstraintsId-23]
	_ = x[assignCatalogId-24]
	_ = x[resolveAnalyzeTablesId-25]
	_ = x[resolveCreateSelectId-26]
	_ = x[resolveSubqueriesId-27]
	_ = x[setViewTargetSchemaId-28]
	_ = x[resolveUnionsId-29]
	_ = x[resolveDescribeQueryId-30]
	_ = x[checkUniqueTableNamesId-31]
	_ = x[resolveTableFunctionsId-32]
	_ = x[resolveDeclarationsId-33]
	_ = x[resolveColumnDefaultsId-34]
	_ = x[validateColumnDefaultsId-35]
	_ = x[validateCreateTriggerId-36]
	_ = x[validateCreateProcedureId-37]
	_ = x[resolveCreateProcedureId-38]
	_ = x[loadInfoSchemaId-39]
	_ = x[validateReadOnlyDatabaseId-40]
	_ = x[validateReadOnlyTransactionId-41]
	_ = x[validateDatabaseSetId-42]
	_ = x[validatePrivilegesId-43]
	_ = x[reresolveTablesId-44]
	_ = x[setInsertColumnsId-45]
	_ = x[validateJoinComplexityId-46]
	_ = x[applyBinlogReplicaControllerId-47]
	_ = x[applyEventSchedulerId-48]
	_ = x[resolveUsingJoinsId-49]
	_ = x[resolveOrderbyLiteralsId-50]
	_ = x[resolveFunctionsId-51]
	_ = x[flattenTableAliasesId-52]
	_ = x[pushdownSortId-53]
	_ = x[pushdownGroupbyAliasesId-54]
	_ = x[pushdownSubqueryAliasFiltersId-55]
	_ = x[qualifyColumnsId-56]
	_ = x[resolveColumnsId-57]
	_ = x[validateCheckConstraintId-58]
	_ = x[resolveBarewordSetVariablesId-59]
	_ = x[replaceCountStarId-60]
	_ = x[expandStarsId-61]
	_ = x[transposeRightJoinsId-62]
	_ = x[resolveHavingId-63]
	_ = x[mergeUnionSchemasId-64]
	_ = x[flattenAggregationExprsId-65]
	_ = x[reorderProjectionId-66]
	_ = x[resolveSubqueryExprsId-67]
	_ = x[replaceCrossJoinsId-68]
	_ = x[moveJoinCondsToFilterId-69]
	_ = x[simplifyFiltersId-70]
	_ = x[pushNotFiltersId-71]
	_ = x[optimizeDistinctId-72]
	_ = x[hoistOutOfScopeFiltersId-73]
	_ = x[transformJoinApplyId-74]
	_ = x[hoistSelectExistsId-75]
	_ = x[finalizeSubqueriesId-76]
	_ = x[finalizeUnionsId-77]
	_ = x[loadTriggersId-78]
	_ = x[loadEventsId-79]
	_ = x[processTruncateId-80]
	_ = x[resolveAlterColumnId-81]
	_ = x[resolveGeneratorsId-82]
	_ = x[removeUnnecessaryConvertsId-83]
	_ = x[pruneColumnsId-84]
	_ = x[stripTableNameInDefaultsId-85]
	_ = x[foldEmptyJoinsId-86]
	_ = x[optimizeJoinsId-87]
	_ = x[generateIndexScansId-88]
	_ = x[matchAgainstId-89]
	_ = x[pushFiltersId-90]
	_ = x[applyIndexesFromOuterScopeId-91]
	_ = x[pruneTablesId-92]
	_ = x[fixupAuxiliaryExprsId-93]
	_ = x[assignExecIndexesId-94]
	_ = x[inlineSubqueryAliasRefsId-95]
	_ = x[eraseProjectionId-96]
	_ = x[replaceAggId-97]
	_ = x[replaceIdxSortId-98]
	_ = x[insertTopNId-99]
	_ = x[applyHashInId-100]
	_ = x[resolveInsertRowsId-101]
	_ = x[resolvePreparedInsertId-102]
	_ = x[applyTriggersId-103]
	_ = x[applyProceduresId-104]
	_ = x[assignRoutinesId-105]
	_ = x[modifyUpdateExprsForJoinId-106]
	_ = x[applyRowUpdateAccumulatorsId-107]
	_ = x[wrapWithRollbackId-108]
	_ = x[applyFKsId-109]
	_ = x[validateResolvedId-110]
	_ = x[validateOrderById-111]
	_ = x[validateGroupById-112]
	_ = x[validateSchemaSourceId-113]
	_ = x[validateIndexCreationId-114]
	_ = x[validateOperandsId-115]
	_ = x[validateCaseResultTypesId-116]
	_ = x[validateIntervalUsageId-117]
	_ = x[validateExplodeUsageId-118]
	_ = x[validateSubqueryColumnsId-119]
	_ = x[validateUnionSchemasMatchId-120]
	_ = x[validateAggregationsId-121]
	_ = x[validateDeleteFromId-122]
	_ = x[cacheSubqueryResultsId-123]
	_ = x[cacheSubqueryAliasesInJoinsId-124]
	_ = x[AutocommitId-125]
	_ = x[TrackProcessId-126]
	_ = x[parallelizeId-127]
	_ = x[clearWarningsId-128]
}

const _RuleId_name = "applyDefaultSelectLimitvalidateOffsetAndLimitvalidateStarExpressionsvalidateCreateTablevalidateAlterTablevalidateExprSemresolveVariablesresolveNamedWindowsresolveSetVariablesresolveViewsliftCtesresolveCtesliftRecursiveCtesresolveDatabasesresolveTablesloadStoredProceduresvalidateDropTablespruneDropTablessetTargetSchemasresolveCreateLikeparseColumnDefaultsresolveDropConstraintvalidateDropConstraintloadCheckConstraintsassignCatalogresolveAnalyzeTablesresolveCreateSelectresolveSubqueriessetViewTargetSchemaresolveUnionsresolveDescribeQuerycheckUniqueTableNamesresolveTableFunctionsresolveDeclarationsresolveColumnDefaultsvalidateColumnDefaultsvalidateCreateTriggervalidateCreateProcedureresolveCreateProcedureloadInfoSchemavalidateReadOnlyDatabasevalidateReadOnlyTransactionvalidateDatabaseSetvalidatePrivilegesreresolveTablessetInsertColumnsvalidateJoinComplexityapplyBinlogReplicaControllerapplyEventSchedulerresolveUsingJoinsresolveOrderbyLiteralsresolveFunctionsflattenTableAliasespushdownSortpushdownGroupbyAliasespushdownSubqueryAliasFiltersqualifyColumnsresolveColumnsvalidateCheckConstraintresolveBarewordSetVariablesreplaceCountStarexpandStarstransposeRightJoinsresolveHavingmergeUnionSchemasflattenAggregationExprsreorderProjectionresolveSubqueryExprsreplaceCrossJoinsmoveJoinCondsToFiltersimplifyFilterspushInversionsoptimizeDistincthoistOutOfScopeFilterstransformJoinApplyhoistSelectExistsfinalizeSubqueriesfinalizeUnionsloadTriggersloadEventsprocessTruncateresolveAlterColumnresolveGeneratorsremoveUnnecessaryConvertspruneColumnsstripTableNamesFromColumnDefaultsfoldEmptyJoinsoptimizeJoinsgenerateIndexScansmatchAgainstpushFiltersapplyIndexesFromOuterScopepruneTablesfixupAuxiliaryExprsassignExecIndexesinlineSubqueryAliasRefseraseProjectionreplaceAggreplaceIdxSortinsertTopNapplyHashInresolveInsertRowsresolvePreparedInsertapplyTriggersapplyProceduresassignRoutinesmodifyUpdateExprsForJoinapplyRowUpdateAccumulatorsrollback triggersapplyFKsvalidateResolvedvalidateOrderByvalidateGroupByvalidateSchemaSourcevalidateIndexCreationvalidateOperandsvalidateCaseResultTypesvalidateIntervalUsagevalidateExplodeUsagevalidateSubqueryColumnsvalidateUnionSchemasMatchvalidateAggregationsvalidateDeleteFromcacheSubqueryResultscacheSubqueryAliasesInJoinsaddAutocommitNodetrackProcessparallelizeclearWarnings"

var _RuleId_index = [...]uint16{0, 23, 45, 68, 87, 105, 120, 136, 155, 174, 186, 194, 205, 222, 238, 251, 271, 289, 304, 320, 337, 356, 377, 399, 419, 432, 452, 471, 488, 507, 520, 540, 561, 582, 601, 622, 644, 665, 688, 710, 724, 748, 775, 794, 812, 827, 843, 865, 893, 912, 929, 951, 967, 986, 998, 1020, 1048, 1062, 1076, 1099, 1126, 1142, 1153, 1172, 1185, 1202, 1225, 1242, 1262, 1279, 1300, 1315, 1329, 1345, 1367, 1385, 1402, 1420, 1434, 1446, 1456, 1471, 1489, 1506, 1531, 1543, 1576, 1590, 1603, 1621, 1633, 1644, 1670, 1681, 1700, 1717, 1740, 1755, 1765, 1779, 1789, 1800, 1817, 1838, 1851, 1866, 1880, 1904, 1930, 1947, 1955, 1971, 1986, 2001, 2021, 2042, 2058, 2081, 2102, 2122, 2145, 2170, 2190, 2208, 2228, 2255, 2272, 2284, 2295, 2308}

func (i RuleId) String() string {
	if i < 0 || i >= RuleId(len(_RuleId_index)-1) {
		return "RuleId(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RuleId_name[_RuleId_index[i]:_RuleId_index[i+1]]
}
