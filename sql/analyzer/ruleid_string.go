// Code generated by "stringer -type=RuleId -linecomment"; DO NOT EDIT.

package analyzer

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[applyDefaultSelectLimitId-0]
	_ = x[validateOffsetAndLimitId-1]
	_ = x[validateStarExpressionsId-2]
	_ = x[validateCreateTableId-3]
	_ = x[validateExprSemId-4]
	_ = x[resolveVariablesId-5]
	_ = x[resolveNamedWindowsId-6]
	_ = x[resolveSetVariablesId-7]
	_ = x[resolveViewsId-8]
	_ = x[liftCtesId-9]
	_ = x[resolveCtesId-10]
	_ = x[liftRecursiveCtesId-11]
	_ = x[resolveDatabasesId-12]
	_ = x[resolveTablesId-13]
	_ = x[loadStoredProceduresId-14]
	_ = x[validateDropTablesId-15]
	_ = x[pruneDropTablesId-16]
	_ = x[setTargetSchemasId-17]
	_ = x[resolveCreateLikeId-18]
	_ = x[parseColumnDefaultsId-19]
	_ = x[resolveDropConstraintId-20]
	_ = x[validateDropConstraintId-21]
	_ = x[loadCheckConstraintsId-22]
	_ = x[assignCatalogId-23]
	_ = x[resolveAnalyzeTablesId-24]
	_ = x[resolveCreateSelectId-25]
	_ = x[resolveSubqueriesId-26]
	_ = x[setViewTargetSchemaId-27]
	_ = x[resolveUnionsId-28]
	_ = x[resolveDescribeQueryId-29]
	_ = x[checkUniqueTableNamesId-30]
	_ = x[resolveTableFunctionsId-31]
	_ = x[resolveDeclarationsId-32]
	_ = x[resolveColumnDefaultsId-33]
	_ = x[validateColumnDefaultsId-34]
	_ = x[validateCreateTriggerId-35]
	_ = x[validateCreateProcedureId-36]
	_ = x[resolveCreateProcedureId-37]
	_ = x[loadInfoSchemaId-38]
	_ = x[validateReadOnlyDatabaseId-39]
	_ = x[validateReadOnlyTransactionId-40]
	_ = x[validateDatabaseSetId-41]
	_ = x[validatePrivilegesId-42]
	_ = x[reresolveTablesId-43]
	_ = x[setInsertColumnsId-44]
	_ = x[validateJoinComplexityId-45]
	_ = x[applyBinlogReplicaControllerId-46]
	_ = x[resolveNaturalJoinsId-47]
	_ = x[resolveOrderbyLiteralsId-48]
	_ = x[resolveFunctionsId-49]
	_ = x[flattenTableAliasesId-50]
	_ = x[pushdownSortId-51]
	_ = x[pushdownGroupbyAliasesId-52]
	_ = x[pushdownSubqueryAliasFiltersId-53]
	_ = x[qualifyColumnsId-54]
	_ = x[resolveColumnsId-55]
	_ = x[validateCheckConstraintId-56]
	_ = x[resolveBarewordSetVariablesId-57]
	_ = x[replaceCountStarId-58]
	_ = x[expandStarsId-59]
	_ = x[transposeRightJoinsId-60]
	_ = x[resolveHavingId-61]
	_ = x[mergeUnionSchemasId-62]
	_ = x[flattenAggregationExprsId-63]
	_ = x[reorderProjectionId-64]
	_ = x[resolveSubqueryExprsId-65]
	_ = x[replaceCrossJoinsId-66]
	_ = x[moveJoinCondsToFilterId-67]
	_ = x[evalFilterId-68]
	_ = x[optimizeDistinctId-69]
	_ = x[hoistOutOfScopeFiltersId-70]
	_ = x[transformJoinApplyId-71]
	_ = x[hoistSelectExistsId-72]
	_ = x[finalizeSubqueriesId-73]
	_ = x[finalizeUnionsId-74]
	_ = x[loadTriggersId-75]
	_ = x[loadEventsId-76]
	_ = x[processTruncateId-77]
	_ = x[resolveAlterColumnId-78]
	_ = x[resolveGeneratorsId-79]
	_ = x[removeUnnecessaryConvertsId-80]
	_ = x[pruneColumnsId-81]
	_ = x[stripTableNameInDefaultsId-82]
	_ = x[foldEmptyJoinsId-83]
	_ = x[optimizeJoinsId-84]
	_ = x[generateIndexScansId-85]
	_ = x[pushFiltersId-86]
	_ = x[subqueryIndexesId-87]
	_ = x[pruneTablesId-88]
	_ = x[fixupAuxiliaryExprsId-89]
	_ = x[setJoinScopeLenId-90]
	_ = x[eraseProjectionId-91]
	_ = x[replaceSortPkId-92]
	_ = x[insertTopNId-93]
	_ = x[applyHashInId-94]
	_ = x[resolveInsertRowsId-95]
	_ = x[resolvePreparedInsertId-96]
	_ = x[applyTriggersId-97]
	_ = x[applyProceduresId-98]
	_ = x[assignRoutinesId-99]
	_ = x[modifyUpdateExprsForJoinId-100]
	_ = x[applyRowUpdateAccumulatorsId-101]
	_ = x[wrapWithRollbackId-102]
	_ = x[applyFKsId-103]
	_ = x[validateResolvedId-104]
	_ = x[validateOrderById-105]
	_ = x[validateGroupById-106]
	_ = x[validateSchemaSourceId-107]
	_ = x[validateIndexCreationId-108]
	_ = x[validateOperandsId-109]
	_ = x[validateCaseResultTypesId-110]
	_ = x[validateIntervalUsageId-111]
	_ = x[validateExplodeUsageId-112]
	_ = x[validateSubqueryColumnsId-113]
	_ = x[validateUnionSchemasMatchId-114]
	_ = x[validateAggregationsId-115]
	_ = x[validateDeleteFromId-116]
	_ = x[cacheSubqueryResultsId-117]
	_ = x[cacheSubqueryAliasesInJoinsId-118]
	_ = x[AutocommitId-119]
	_ = x[TrackProcessId-120]
	_ = x[parallelizeId-121]
	_ = x[clearWarningsId-122]
}

const _RuleId_name = "applyDefaultSelectLimitvalidateOffsetAndLimitvalidateStarExpressionsvalidateCreateTablevalidateExprSemresolveVariablesresolveNamedWindowsresolveSetVariablesresolveViewsliftCtesresolveCtesliftRecursiveCtesresolveDatabasesresolveTablesloadStoredProceduresvalidateDropTablespruneDropTablessetTargetSchemasresolveCreateLikeparseColumnDefaultsresolveDropConstraintvalidateDropConstraintloadCheckConstraintsassignCatalogresolveAnalyzeTablesresolveCreateSelectresolveSubqueriessetViewTargetSchemaresolveUnionsresolveDescribeQuerycheckUniqueTableNamesresolveTableFunctionsresolveDeclarationsresolveColumnDefaultsvalidateColumnDefaultsvalidateCreateTriggervalidateCreateProcedureresolveCreateProcedureloadInfoSchemavalidateReadOnlyDatabasevalidateReadOnlyTransactionvalidateDatabaseSetvalidatePrivilegesreresolveTablessetInsertColumnsvalidateJoinComplexityapplyBinlogReplicaControllerresolveNaturalJoinsresolveOrderbyLiteralsresolveFunctionsflattenTableAliasespushdownSortpushdownGroupbyAliasespushdownSubqueryAliasFiltersqualifyColumnsresolveColumnsvalidateCheckConstraintresolveBarewordSetVariablesreplaceCountStarexpandStarstransposeRightJoinsresolveHavingmergeUnionSchemasflattenAggregationExprsreorderProjectionresolveSubqueryExprsreplaceCrossJoinsmoveJoinCondsToFilterevalFilteroptimizeDistincthoistOutOfScopeFilterstransformJoinApplyhoistSelectExistsfinalizeSubqueriesfinalizeUnionsloadTriggersloadEventsprocessTruncateresolveAlterColumnresolveGeneratorsremoveUnnecessaryConvertspruneColumnsstripTableNamesFromColumnDefaultsfoldEmptyJoinsoptimizeJoinsgenerateIndexScanspushFilterssubqueryIndexespruneTablesfixupAuxiliaryExprssetJoinScopeLeneraseProjectionreplaceSortPkinsertTopNapplyHashInresolveInsertRowsresolvePreparedInsertapplyTriggersapplyProceduresassignRoutinesmodifyUpdateExprsForJoinapplyRowUpdateAccumulatorsrollback triggersapplyFKsvalidateResolvedvalidateOrderByvalidateGroupByvalidateSchemaSourcevalidateIndexCreationvalidateOperandsvalidateCaseResultTypesvalidateIntervalUsagevalidateExplodeUsagevalidateSubqueryColumnsvalidateUnionSchemasMatchvalidateAggregationsvalidateDeleteFromcacheSubqueryResultscacheSubqueryAliasesInJoinsaddAutocommitNodetrackProcessparallelizeclearWarnings"

var _RuleId_index = [...]uint16{0, 23, 45, 68, 87, 102, 118, 137, 156, 168, 176, 187, 204, 220, 233, 253, 271, 286, 302, 319, 338, 359, 381, 401, 414, 434, 453, 470, 489, 502, 522, 543, 564, 583, 604, 626, 647, 670, 692, 706, 730, 757, 776, 794, 809, 825, 847, 875, 894, 916, 932, 951, 963, 985, 1013, 1027, 1041, 1064, 1091, 1107, 1118, 1137, 1150, 1167, 1190, 1207, 1227, 1244, 1265, 1275, 1291, 1313, 1331, 1348, 1366, 1380, 1392, 1402, 1417, 1435, 1452, 1477, 1489, 1522, 1536, 1549, 1567, 1578, 1593, 1604, 1623, 1638, 1653, 1666, 1676, 1687, 1704, 1725, 1738, 1753, 1767, 1791, 1817, 1834, 1842, 1858, 1873, 1888, 1908, 1929, 1945, 1968, 1989, 2009, 2032, 2057, 2077, 2095, 2115, 2142, 2159, 2171, 2182, 2195}

func (i RuleId) String() string {
	if i < 0 || i >= RuleId(len(_RuleId_index)-1) {
		return "RuleId(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RuleId_name[_RuleId_index[i]:_RuleId_index[i+1]]
}
