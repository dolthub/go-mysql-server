// Code generated by "stringer -type=RuleId -linecomment"; DO NOT EDIT.

package analyzer

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[applyDefaultSelectLimitId-0]
	_ = x[validateOffsetAndLimitId-1]
	_ = x[validateCreateTableId-2]
	_ = x[validateExprSemId-3]
	_ = x[resolveVariablesId-4]
	_ = x[resolveNamedWindowsId-5]
	_ = x[resolveSetVariablesId-6]
	_ = x[resolveViewsId-7]
	_ = x[liftCtesId-8]
	_ = x[resolveCtesId-9]
	_ = x[liftRecursiveCtesId-10]
	_ = x[resolveDatabasesId-11]
	_ = x[resolveTablesId-12]
	_ = x[loadStoredProceduresId-13]
	_ = x[validateDropTablesId-14]
	_ = x[setTargetSchemasId-15]
	_ = x[resolveCreateLikeId-16]
	_ = x[parseColumnDefaultsId-17]
	_ = x[resolveDropConstraintId-18]
	_ = x[validateDropConstraintId-19]
	_ = x[loadCheckConstraintsId-20]
	_ = x[assignCatalogId-21]
	_ = x[resolveAnalyzeTablesId-22]
	_ = x[resolveCreateSelectId-23]
	_ = x[resolveSubqueriesId-24]
	_ = x[setViewTargetSchemaId-25]
	_ = x[resolveUnionsId-26]
	_ = x[resolveDescribeQueryId-27]
	_ = x[checkUniqueTableNamesId-28]
	_ = x[resolveTableFunctionsId-29]
	_ = x[resolveDeclarationsId-30]
	_ = x[resolveColumnDefaultsId-31]
	_ = x[validateColumnDefaultsId-32]
	_ = x[validateCreateTriggerId-33]
	_ = x[validateCreateProcedureId-34]
	_ = x[loadInfoSchemaId-35]
	_ = x[validateReadOnlyDatabaseId-36]
	_ = x[validateReadOnlyTransactionId-37]
	_ = x[validateDatabaseSetId-38]
	_ = x[validatePrivilegesId-39]
	_ = x[reresolveTablesId-40]
	_ = x[setInsertColumnsId-41]
	_ = x[validateJoinComplexityId-42]
	_ = x[resolveNaturalJoinsId-43]
	_ = x[resolveOrderbyLiteralsId-44]
	_ = x[resolveFunctionsId-45]
	_ = x[flattenTableAliasesId-46]
	_ = x[pushdownSortId-47]
	_ = x[pushdownGroupbyAliasesId-48]
	_ = x[pushdownSubqueryAliasFiltersId-49]
	_ = x[qualifyColumnsId-50]
	_ = x[resolveColumnsId-51]
	_ = x[validateCheckConstraintId-52]
	_ = x[resolveBarewordSetVariablesId-53]
	_ = x[expandStarsId-54]
	_ = x[transposeRightJoinsId-55]
	_ = x[resolveHavingId-56]
	_ = x[mergeUnionSchemasId-57]
	_ = x[flattenAggregationExprsId-58]
	_ = x[reorderProjectionId-59]
	_ = x[resolveSubqueryExprsId-60]
	_ = x[replaceCrossJoinsId-61]
	_ = x[moveJoinCondsToFilterId-62]
	_ = x[evalFilterId-63]
	_ = x[optimizeDistinctId-64]
	_ = x[finalizeSubqueriesId-65]
	_ = x[finalizeUnionsId-66]
	_ = x[loadTriggersId-67]
	_ = x[processTruncateId-68]
	_ = x[resolveAlterColumnId-69]
	_ = x[resolveGeneratorsId-70]
	_ = x[removeUnnecessaryConvertsId-71]
	_ = x[pruneColumnsId-72]
	_ = x[stripTableNameInDefaultsId-73]
	_ = x[hoistSelectExistsId-74]
	_ = x[optimizeJoinsId-75]
	_ = x[pushdownFiltersId-76]
	_ = x[subqueryIndexesId-77]
	_ = x[inSubqueryIndexesId-78]
	_ = x[pruneTablesId-79]
	_ = x[setJoinScopeLenId-80]
	_ = x[eraseProjectionId-81]
	_ = x[replaceSortPkId-82]
	_ = x[insertTopNId-83]
	_ = x[cacheSubqueryResultsId-84]
	_ = x[cacheSubqueryAliasesInJoinsId-85]
	_ = x[applyHashInId-86]
	_ = x[resolveInsertRowsId-87]
	_ = x[resolvePreparedInsertId-88]
	_ = x[applyTriggersId-89]
	_ = x[applyProceduresId-90]
	_ = x[assignRoutinesId-91]
	_ = x[modifyUpdateExprsForJoinId-92]
	_ = x[applyRowUpdateAccumulatorsId-93]
	_ = x[wrapWithRollbackId-94]
	_ = x[applyFKsId-95]
	_ = x[validateResolvedId-96]
	_ = x[validateOrderById-97]
	_ = x[validateGroupById-98]
	_ = x[validateSchemaSourceId-99]
	_ = x[validateIndexCreationId-100]
	_ = x[validateOperandsId-101]
	_ = x[validateCaseResultTypesId-102]
	_ = x[validateIntervalUsageId-103]
	_ = x[validateExplodeUsageId-104]
	_ = x[validateSubqueryColumnsId-105]
	_ = x[validateUnionSchemasMatchId-106]
	_ = x[validateAggregationsId-107]
	_ = x[AutocommitId-108]
	_ = x[TrackProcessId-109]
	_ = x[parallelizeId-110]
	_ = x[clearWarningsId-111]
}

const _RuleId_name = "applyDefaultSelectLimitvalidateOffsetAndLimitvalidateCreateTablevalidateExprSemresolveVariablesresolveNamedWindowsresolveSetVariablesresolveViewsliftCtesresolveCtesliftRecursiveCtesresolveDatabasesresolveTablesloadStoredProceduresvalidateDropTablessetTargetSchemasresolveCreateLikeparseColumnDefaultsresolveDropConstraintvalidateDropConstraintloadCheckConstraintsassignCatalogresolveAnalyzeTablesresolveCreateSelectresolveSubqueriessetViewTargetSchemaresolveUnionsresolveDescribeQuerycheckUniqueTableNamesresolveTableFunctionsresolveDeclarationsresolveColumnDefaultsvalidateColumnDefaultsvalidateCreateTriggervalidateCreateProcedureloadInfoSchemavalidateReadOnlyDatabasevalidateReadOnlyTransactionvalidateDatabaseSetvalidatePrivilegesreresolveTablessetInsertColumnsvalidateJoinComplexityresolveNaturalJoinsresolveOrderbyLiteralsresolveFunctionsflattenTableAliasespushdownSortpushdownGroupbyAliasespushdownSubqueryAliasFiltersqualifyColumnsresolveColumnsvalidateCheckConstraintresolveBarewordSetVariablesexpandStarstransposeRightJoinsresolveHavingmergeUnionSchemasflattenAggregationExprsreorderProjectionresolveSubqueryExprsreplaceCrossJoinsmoveJoinCondsToFilterevalFilteroptimizeDistinctfinalizeSubqueriesfinalizeUnionsloadTriggersprocessTruncateresolveAlterColumnresolveGeneratorsremoveUnnecessaryConvertspruneColumnsstripTableNamesFromColumnDefaultshoistSelectExistsoptimizeJoinspushdownFilterssubqueryIndexesinSubqueryIndexespruneTablessetJoinScopeLeneraseProjectionreplaceSortPkinsertTopNcacheSubqueryResultscacheSubqueryAliasesInJoinsapplyHashInresolveInsertRowsresolvePreparedInsertapplyTriggersapplyProceduresassignRoutinesmodifyUpdateExprsForJoinapplyRowUpdateAccumulatorsrollback triggersapplyFKsvalidateResolvedvalidateOrderByvalidateGroupByvalidateSchemaSourcevalidateIndexCreationvalidateOperandsvalidateCaseResultTypesvalidateIntervalUsagevalidateExplodeUsagevalidateSubqueryColumnsvalidateUnionSchemasMatchvalidateAggregationsaddAutocommitNodetrackProcessparallelizeclearWarnings"

var _RuleId_index = [...]uint16{0, 23, 45, 64, 79, 95, 114, 133, 145, 153, 164, 181, 197, 210, 230, 248, 264, 281, 300, 321, 343, 363, 376, 396, 415, 432, 451, 464, 484, 505, 526, 545, 566, 588, 609, 632, 646, 670, 697, 716, 734, 749, 765, 787, 806, 828, 844, 863, 875, 897, 925, 939, 953, 976, 1003, 1014, 1033, 1046, 1063, 1086, 1103, 1123, 1140, 1161, 1171, 1187, 1205, 1219, 1231, 1246, 1264, 1281, 1306, 1318, 1351, 1368, 1381, 1396, 1411, 1428, 1439, 1454, 1469, 1482, 1492, 1512, 1539, 1550, 1567, 1588, 1601, 1616, 1630, 1654, 1680, 1697, 1705, 1721, 1736, 1751, 1771, 1792, 1808, 1831, 1852, 1872, 1895, 1920, 1940, 1957, 1969, 1980, 1993}

func (i RuleId) String() string {
	if i < 0 || i >= RuleId(len(_RuleId_index)-1) {
		return "RuleId(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RuleId_name[_RuleId_index[i]:_RuleId_index[i+1]]
}
