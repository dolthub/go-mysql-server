// Code generated by "stringer -type=RuleId -linecomment"; DO NOT EDIT.

package analyzer

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[validateOffsetAndLimitId-0]
	_ = x[validateCreateTableId-1]
	_ = x[validateExprSemId-2]
	_ = x[resolveVariablesId-3]
	_ = x[resolveNamedWindowsId-4]
	_ = x[resolveSetVariablesId-5]
	_ = x[resolveViewsId-6]
	_ = x[liftCtesId-7]
	_ = x[resolveCtesId-8]
	_ = x[liftRecursiveCtesId-9]
	_ = x[resolveDatabasesId-10]
	_ = x[resolveTablesId-11]
	_ = x[loadStoredProceduresId-12]
	_ = x[validateDropTablesId-13]
	_ = x[setTargetSchemasId-14]
	_ = x[resolveCreateLikeId-15]
	_ = x[parseColumnDefaultsId-16]
	_ = x[resolveDropConstraintId-17]
	_ = x[validateDropConstraintId-18]
	_ = x[loadCheckConstraintsId-19]
	_ = x[resolveCreateSelectId-20]
	_ = x[resolveSubqueriesId-21]
	_ = x[setViewTargetSchemaId-22]
	_ = x[resolveUnionsId-23]
	_ = x[resolveDescribeQueryId-24]
	_ = x[checkUniqueTableNamesId-25]
	_ = x[resolveTableFunctionsId-26]
	_ = x[resolveDeclarationsId-27]
	_ = x[validateCreateTriggerId-28]
	_ = x[validateCreateProcedureId-29]
	_ = x[loadInfoSchemaId-30]
	_ = x[validateReadOnlyDatabaseId-31]
	_ = x[validateReadOnlyTransactionId-32]
	_ = x[validateDatabaseSetId-33]
	_ = x[validatePrivilegesId-34]
	_ = x[reresolveTablesId-35]
	_ = x[validateJoinComplexityId-36]
	_ = x[resolveNaturalJoinsId-37]
	_ = x[resolveOrderbyLiteralsId-38]
	_ = x[resolveFunctionsId-39]
	_ = x[flattenTableAliasesId-40]
	_ = x[pushdownSortId-41]
	_ = x[pushdownGroupbyAliasesId-42]
	_ = x[pushdownSubqueryAliasFiltersId-43]
	_ = x[qualifyColumnsId-44]
	_ = x[resolveColumnsId-45]
	_ = x[resolveColumnDefaultsId-46]
	_ = x[validateCheckConstraintId-47]
	_ = x[resolveBarewordSetVariablesId-48]
	_ = x[expandStarsId-49]
	_ = x[resolveHavingId-50]
	_ = x[mergeUnionSchemasId-51]
	_ = x[flattenAggregationExprsId-52]
	_ = x[reorderProjectionId-53]
	_ = x[resolveSubqueryExprsId-54]
	_ = x[finalizeSubqueryExprsId-55]
	_ = x[replaceCrossJoinsId-56]
	_ = x[moveJoinCondsToFilterId-57]
	_ = x[evalFilterId-58]
	_ = x[optimizeDistinctId-59]
	_ = x[finalizeSubqueriesId-60]
	_ = x[finalizeUnionsId-61]
	_ = x[loadTriggersId-62]
	_ = x[processTruncateId-63]
	_ = x[resolveAlterColumnId-64]
	_ = x[resolveGeneratorsId-65]
	_ = x[removeUnnecessaryConvertsId-66]
	_ = x[assignCatalogId-67]
	_ = x[pruneColumnsId-68]
	_ = x[hoistSelectExistsId-69]
	_ = x[optimizeJoinsId-70]
	_ = x[pushdownFiltersId-71]
	_ = x[subqueryIndexesId-72]
	_ = x[inSubqueryIndexesId-73]
	_ = x[pruneTablesId-74]
	_ = x[setJoinScopeLenId-75]
	_ = x[eraseProjectionId-76]
	_ = x[replaceSortPkId-77]
	_ = x[insertTopNId-78]
	_ = x[cacheSubqueryResultsId-79]
	_ = x[cacheSubqueryAliasesInJoinsId-80]
	_ = x[applyHashLookupsId-81]
	_ = x[applyHashInId-82]
	_ = x[resolveInsertRowsId-83]
	_ = x[resolvePreparedInsertId-84]
	_ = x[applyTriggersId-85]
	_ = x[applyProceduresId-86]
	_ = x[assignRoutinesId-87]
	_ = x[modifyUpdateExprsForJoinId-88]
	_ = x[applyRowUpdateAccumulatorsId-89]
	_ = x[wrapWithRollbackId-90]
	_ = x[applyFKsId-91]
	_ = x[reifyFullOuterJoinId-92]
	_ = x[validateResolvedId-93]
	_ = x[validateOrderById-94]
	_ = x[validateGroupById-95]
	_ = x[validateSchemaSourceId-96]
	_ = x[validateIndexCreationId-97]
	_ = x[validateOperandsId-98]
	_ = x[validateCaseResultTypesId-99]
	_ = x[validateIntervalUsageId-100]
	_ = x[validateExplodeUsageId-101]
	_ = x[validateSubqueryColumnsId-102]
	_ = x[validateUnionSchemasMatchId-103]
	_ = x[validateAggregationsId-104]
	_ = x[AutocommitId-105]
	_ = x[TrackProcessId-106]
	_ = x[parallelizeId-107]
	_ = x[clearWarningsId-108]
}

const _RuleId_name = "validateOffsetAndLimitvalidateCreateTablevalidateExprSemresolveVariablesresolveNamedWindowsresolveSetVariablesresolveViewsliftCtesresolveCtesliftRecursiveCtesresolveDatabasesresolveTablesloadStoredProceduresvalidateDropTablessetTargetSchemasresolveCreateLikeparseColumnDefaultsresolveDropConstraintvalidateDropConstraintloadCheckConstraintsresolveCreateSelectresolveSubqueriessetViewTargetSchemaresolveUnionsresolveDescribeQuerycheckUniqueTableNamesresolveTableFunctionsresolveDeclarationsvalidateCreateTriggervalidateCreateProcedureloadInfoSchemavalidateReadOnlyDatabasevalidateReadOnlyTransactionvalidateDatabaseSetvalidatePrivilegesreresolveTablesvalidateJoinComplexityresolveNaturalJoinsresolveOrderbyLiteralsresolveFunctionsflattenTableAliasespushdownSortpushdownGroupbyAliasespushdownSubqueryAliasFiltersqualifyColumnsresolveColumnsresolveColumnDefaultsvalidateCheckConstraintresolveBarewordSetVariablesexpandStarsresolveHavingmergeUnionSchemasflattenAggregationExprsreorderProjectionresolveSubqueryExprsfinalizeSubqueryExprsreplaceCrossJoinsmoveJoinCondsToFilterevalFilteroptimizeDistinctfinalizeSubqueriesfinalizeUnionsloadTriggersprocessTruncateresolveAlterColumnresolveGeneratorsremoveUnnecessaryConvertsassignCatalogpruneColumnshoistSelectExistsoptimizeJoinspushdownFilterssubqueryIndexesinSubqueryIndexespruneTablessetJoinScopeLeneraseProjectionreplaceSortPkinsertTopNcacheSubqueryResultscacheSubqueryAliasesInJoinsapplyHashLookupsapplyHashInresolveInsertRowsresolvePreparedInsertapplyTriggersapplyProceduresassignRoutinesmodifyUpdateExprsForJoinapplyRowUpdateAccumulatorsrollback triggersapplyFKsreifyFullOuterJoinvalidateResolvedvalidateOrderByvalidateGroupByvalidateSchemaSourcevalidateIndexCreationvalidateOperandsvalidateCaseResultTypesvalidateIntervalUsagevalidateExplodeUsagevalidateSubqueryColumnsvalidateUnionSchemasMatchvalidateAggregationsaddAutocommitNodetrackProcessparallelizeclearWarnings"

var _RuleId_index = [...]uint16{0, 22, 41, 56, 72, 91, 110, 122, 130, 141, 158, 174, 187, 207, 225, 241, 258, 277, 298, 320, 340, 359, 376, 395, 408, 428, 449, 470, 489, 510, 533, 547, 571, 598, 617, 635, 650, 672, 691, 713, 729, 748, 760, 782, 810, 824, 838, 859, 882, 909, 920, 933, 950, 973, 990, 1010, 1031, 1048, 1069, 1079, 1095, 1113, 1127, 1139, 1154, 1172, 1189, 1214, 1227, 1239, 1256, 1269, 1284, 1299, 1316, 1327, 1342, 1357, 1370, 1380, 1400, 1427, 1443, 1454, 1471, 1492, 1505, 1520, 1534, 1558, 1584, 1601, 1609, 1627, 1643, 1658, 1673, 1693, 1714, 1730, 1753, 1774, 1794, 1817, 1842, 1862, 1879, 1891, 1902, 1915}

func (i RuleId) String() string {
	if i < 0 || i >= RuleId(len(_RuleId_index)-1) {
		return "RuleId(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RuleId_name[_RuleId_index[i]:_RuleId_index[i+1]]
}
