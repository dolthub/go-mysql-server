// Code generated by "stringer -type=RuleId -linecomment"; DO NOT EDIT.

package analyzer

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[applyDefaultSelectLimitId-0]
	_ = x[validateOffsetAndLimitId-1]
	_ = x[validateCreateTableId-2]
	_ = x[validateExprSemId-3]
	_ = x[resolveVariablesId-4]
	_ = x[resolveNamedWindowsId-5]
	_ = x[resolveSetVariablesId-6]
	_ = x[resolveViewsId-7]
	_ = x[liftCtesId-8]
	_ = x[resolveCtesId-9]
	_ = x[liftRecursiveCtesId-10]
	_ = x[resolveDatabasesId-11]
	_ = x[resolveTablesId-12]
	_ = x[loadStoredProceduresId-13]
	_ = x[validateDropTablesId-14]
	_ = x[setTargetSchemasId-15]
	_ = x[resolveCreateLikeId-16]
	_ = x[parseColumnDefaultsId-17]
	_ = x[resolveDropConstraintId-18]
	_ = x[validateDropConstraintId-19]
	_ = x[loadCheckConstraintsId-20]
	_ = x[assignCatalogId-21]
	_ = x[resolveCreateSelectId-22]
	_ = x[resolveSubqueriesId-23]
	_ = x[setViewTargetSchemaId-24]
	_ = x[resolveUnionsId-25]
	_ = x[resolveDescribeQueryId-26]
	_ = x[checkUniqueTableNamesId-27]
	_ = x[resolveTableFunctionsId-28]
	_ = x[resolveDeclarationsId-29]
	_ = x[resolveColumnDefaultsId-30]
	_ = x[validateColumnDefaultsId-31]
	_ = x[validateCreateTriggerId-32]
	_ = x[validateCreateProcedureId-33]
	_ = x[loadInfoSchemaId-34]
	_ = x[validateReadOnlyDatabaseId-35]
	_ = x[validateReadOnlyTransactionId-36]
	_ = x[validateDatabaseSetId-37]
	_ = x[validatePrivilegesId-38]
	_ = x[reresolveTablesId-39]
	_ = x[setInsertColumnsId-40]
	_ = x[validateJoinComplexityId-41]
	_ = x[resolveNaturalJoinsId-42]
	_ = x[resolveOrderbyLiteralsId-43]
	_ = x[resolveFunctionsId-44]
	_ = x[flattenTableAliasesId-45]
	_ = x[pushdownSortId-46]
	_ = x[pushdownGroupbyAliasesId-47]
	_ = x[pushdownSubqueryAliasFiltersId-48]
	_ = x[qualifyColumnsId-49]
	_ = x[resolveColumnsId-50]
	_ = x[validateCheckConstraintId-51]
	_ = x[resolveBarewordSetVariablesId-52]
	_ = x[expandStarsId-53]
	_ = x[transposeRightJoinsId-54]
	_ = x[resolveHavingId-55]
	_ = x[mergeUnionSchemasId-56]
	_ = x[flattenAggregationExprsId-57]
	_ = x[reorderProjectionId-58]
	_ = x[resolveSubqueryExprsId-59]
	_ = x[replaceCrossJoinsId-60]
	_ = x[moveJoinCondsToFilterId-61]
	_ = x[evalFilterId-62]
	_ = x[optimizeDistinctId-63]
	_ = x[finalizeSubqueriesId-64]
	_ = x[finalizeUnionsId-65]
	_ = x[loadTriggersId-66]
	_ = x[processTruncateId-67]
	_ = x[resolveAlterColumnId-68]
	_ = x[resolveGeneratorsId-69]
	_ = x[removeUnnecessaryConvertsId-70]
	_ = x[pruneColumnsId-71]
	_ = x[stripTableNameInDefaultsId-72]
	_ = x[hoistSelectExistsId-73]
	_ = x[optimizeJoinsId-74]
	_ = x[pushdownFiltersId-75]
	_ = x[subqueryIndexesId-76]
	_ = x[inSubqueryIndexesId-77]
	_ = x[pruneTablesId-78]
	_ = x[setJoinScopeLenId-79]
	_ = x[eraseProjectionId-80]
	_ = x[replaceSortPkId-81]
	_ = x[insertTopNId-82]
	_ = x[cacheSubqueryResultsId-83]
	_ = x[cacheSubqueryAliasesInJoinsId-84]
	_ = x[applyHashInId-85]
	_ = x[resolveInsertRowsId-86]
	_ = x[resolvePreparedInsertId-87]
	_ = x[applyTriggersId-88]
	_ = x[applyProceduresId-89]
	_ = x[assignRoutinesId-90]
	_ = x[modifyUpdateExprsForJoinId-91]
	_ = x[applyRowUpdateAccumulatorsId-92]
	_ = x[wrapWithRollbackId-93]
	_ = x[applyFKsId-94]
	_ = x[validateResolvedId-95]
	_ = x[validateOrderById-96]
	_ = x[validateGroupById-97]
	_ = x[validateSchemaSourceId-98]
	_ = x[validateIndexCreationId-99]
	_ = x[validateOperandsId-100]
	_ = x[validateCaseResultTypesId-101]
	_ = x[validateIntervalUsageId-102]
	_ = x[validateExplodeUsageId-103]
	_ = x[validateSubqueryColumnsId-104]
	_ = x[validateUnionSchemasMatchId-105]
	_ = x[validateAggregationsId-106]
	_ = x[AutocommitId-107]
	_ = x[TrackProcessId-108]
	_ = x[parallelizeId-109]
	_ = x[clearWarningsId-110]
}

const _RuleId_name = "applyDefaultSelectLimitvalidateOffsetAndLimitvalidateCreateTablevalidateExprSemresolveVariablesresolveNamedWindowsresolveSetVariablesresolveViewsliftCtesresolveCtesliftRecursiveCtesresolveDatabasesresolveTablesloadStoredProceduresvalidateDropTablessetTargetSchemasresolveCreateLikeparseColumnDefaultsresolveDropConstraintvalidateDropConstraintloadCheckConstraintsassignCatalogresolveCreateSelectresolveSubqueriessetViewTargetSchemaresolveUnionsresolveDescribeQuerycheckUniqueTableNamesresolveTableFunctionsresolveDeclarationsresolveColumnDefaultsvalidateColumnDefaultsvalidateCreateTriggervalidateCreateProcedureloadInfoSchemavalidateReadOnlyDatabasevalidateReadOnlyTransactionvalidateDatabaseSetvalidatePrivilegesreresolveTablessetInsertColumnsvalidateJoinComplexityresolveNaturalJoinsresolveOrderbyLiteralsresolveFunctionsflattenTableAliasespushdownSortpushdownGroupbyAliasespushdownSubqueryAliasFiltersqualifyColumnsresolveColumnsvalidateCheckConstraintresolveBarewordSetVariablesexpandStarstransposeRightJoinsresolveHavingmergeUnionSchemasflattenAggregationExprsreorderProjectionresolveSubqueryExprsreplaceCrossJoinsmoveJoinCondsToFilterevalFilteroptimizeDistinctfinalizeSubqueriesfinalizeUnionsloadTriggersprocessTruncateresolveAlterColumnresolveGeneratorsremoveUnnecessaryConvertspruneColumnsstripTableNamesFromColumnDefaultshoistSelectExistsoptimizeJoinspushdownFilterssubqueryIndexesinSubqueryIndexespruneTablessetJoinScopeLeneraseProjectionreplaceSortPkinsertTopNcacheSubqueryResultscacheSubqueryAliasesInJoinsapplyHashInresolveInsertRowsresolvePreparedInsertapplyTriggersapplyProceduresassignRoutinesmodifyUpdateExprsForJoinapplyRowUpdateAccumulatorsrollback triggersapplyFKsvalidateResolvedvalidateOrderByvalidateGroupByvalidateSchemaSourcevalidateIndexCreationvalidateOperandsvalidateCaseResultTypesvalidateIntervalUsagevalidateExplodeUsagevalidateSubqueryColumnsvalidateUnionSchemasMatchvalidateAggregationsaddAutocommitNodetrackProcessparallelizeclearWarnings"

var _RuleId_index = [...]uint16{0, 23, 45, 64, 79, 95, 114, 133, 145, 153, 164, 181, 197, 210, 230, 248, 264, 281, 300, 321, 343, 363, 376, 395, 412, 431, 444, 464, 485, 506, 525, 546, 568, 589, 612, 626, 650, 677, 696, 714, 729, 745, 767, 786, 808, 824, 843, 855, 877, 905, 919, 933, 956, 983, 994, 1013, 1026, 1043, 1066, 1083, 1103, 1120, 1141, 1151, 1167, 1185, 1199, 1211, 1226, 1244, 1261, 1286, 1298, 1331, 1348, 1361, 1376, 1391, 1408, 1419, 1434, 1449, 1462, 1472, 1492, 1519, 1530, 1547, 1568, 1581, 1596, 1610, 1634, 1660, 1677, 1685, 1701, 1716, 1731, 1751, 1772, 1788, 1811, 1832, 1852, 1875, 1900, 1920, 1937, 1949, 1960, 1973}

func (i RuleId) String() string {
	if i < 0 || i >= RuleId(len(_RuleId_index)-1) {
		return "RuleId(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RuleId_name[_RuleId_index[i]:_RuleId_index[i+1]]
}
