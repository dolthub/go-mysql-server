// Code generated by "stringer -type=RuleId -linecomment"; DO NOT EDIT.

package analyzer

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[applyDefaultSelectLimitId-0]
	_ = x[validateOffsetAndLimitId-1]
	_ = x[validateStarExpressionsId-2]
	_ = x[validateCreateTableId-3]
	_ = x[validateAlterTableId-4]
	_ = x[validateExprSemId-5]
	_ = x[loadStoredProceduresId-6]
	_ = x[validateDropTablesId-7]
	_ = x[resolveDropConstraintId-8]
	_ = x[validateDropConstraintId-9]
	_ = x[resolveCreateSelectId-10]
	_ = x[resolveSubqueriesId-11]
	_ = x[resolveUnionsId-12]
	_ = x[ValidateColumnDefaultsId-13]
	_ = x[validateCreateTriggerId-14]
	_ = x[validateCreateProcedureId-15]
	_ = x[validateReadOnlyDatabaseId-16]
	_ = x[validateReadOnlyTransactionId-17]
	_ = x[validateDatabaseSetId-18]
	_ = x[validatePrivilegesId-19]
	_ = x[flattenTableAliasesId-20]
	_ = x[pushdownSubqueryAliasFiltersId-21]
	_ = x[validateCheckConstraintId-22]
	_ = x[replaceCountStarId-23]
	_ = x[replaceCrossJoinsId-24]
	_ = x[moveJoinCondsToFilterId-25]
	_ = x[simplifyFiltersId-26]
	_ = x[pushNotFiltersId-27]
	_ = x[hoistOutOfScopeFiltersId-28]
	_ = x[unnestInSubqueriesId-29]
	_ = x[unnestExistsSubqueriesId-30]
	_ = x[finalizeSubqueriesId-31]
	_ = x[finalizeUnionsId-32]
	_ = x[loadTriggersId-33]
	_ = x[processTruncateId-34]
	_ = x[resolveAlterColumnId-35]
	_ = x[stripTableNameInDefaultsId-36]
	_ = x[optimizeJoinsId-37]
	_ = x[pushFiltersId-38]
	_ = x[applyIndexesFromOuterScopeId-39]
	_ = x[pruneTablesId-40]
	_ = x[assignExecIndexesId-41]
	_ = x[inlineSubqueryAliasRefsId-42]
	_ = x[eraseProjectionId-43]
	_ = x[flattenDistinctId-44]
	_ = x[replaceAggId-45]
	_ = x[replaceIdxSortId-46]
	_ = x[insertTopNId-47]
	_ = x[replaceIdxOrderByDistanceId-48]
	_ = x[applyHashInId-49]
	_ = x[resolveInsertRowsId-50]
	_ = x[applyTriggersId-51]
	_ = x[applyProceduresId-52]
	_ = x[assignRoutinesId-53]
	_ = x[modifyUpdateExprsForJoinId-54]
	_ = x[applyForeignKeysId-55]
	_ = x[validateResolvedId-56]
	_ = x[validateOrderById-57]
	_ = x[validateGroupById-58]
	_ = x[validateSchemaSourceId-59]
	_ = x[validateIndexCreationId-60]
	_ = x[ValidateOperandsId-61]
	_ = x[validateIntervalUsageId-62]
	_ = x[validateSubqueryColumnsId-63]
	_ = x[validateUnionSchemasMatchId-64]
	_ = x[validateAggregationsId-65]
	_ = x[validateDeleteFromId-66]
	_ = x[cacheSubqueryAliasesInJoinsId-67]
	_ = x[BacktickDefaulColumnValueNamesId-68]
	_ = x[TrackProcessId-69]
}

const _RuleId_name = "applyDefaultSelectLimitvalidateOffsetAndLimitvalidateStarExpressionsvalidateCreateTablevalidateAlterTablevalidateExprSemloadStoredProceduresvalidateDropTablesresolveDropConstraintvalidateDropConstraintresolveCreateSelectresolveSubqueriesresolveUnionsvalidateColumnDefaultsvalidateCreateTriggervalidateCreateProcedurevalidateReadOnlyDatabasevalidateReadOnlyTransactionvalidateDatabaseSetvalidatePrivilegesflattenTableAliasespushdownSubqueryAliasFiltersvalidateCheckConstraintsreplaceCountStarreplaceCrossJoinsmoveJoinConditionsToFiltersimplifyFilterspushNotFiltershoistOutOfScopeFiltersunnestInSubqueriesunnestExistsSubqueriesfinalizeSubqueriesfinalizeUnionsloadTriggersprocessTruncateresolveAlterColumnstripTableNamesFromColumnDefaultsoptimizeJoinspushFiltersapplyIndexesFromOuterScopepruneTablesassignExecIndexesinlineSubqueryAliasRefseraseProjectionflattenDistinctreplaceAggreplaceIdxSortinsertTopNNodesreplaceIdxOrderByDistanceapplyHashInresolveInsertRowsapplyTriggersapplyProceduresassignRoutinesmodifyUpdateExprsForJoinapplyForeignKeysvalidateResolvedvalidateOrderByvalidateGroupByvalidateSchemaSourcevalidateIndexCreationvalidateOperandsvalidateIntervalUsagevalidateSubqueryColumnsvalidateUnionSchemasMatchvalidateAggregationsvalidateDeleteFromcacheSubqueryAliasesInJoinsbacktickDefaultColumnValueNamestrackProcess"

var _RuleId_index = [...]uint16{0, 23, 45, 68, 87, 105, 120, 140, 158, 179, 201, 220, 237, 250, 272, 293, 316, 340, 367, 386, 404, 423, 451, 475, 491, 508, 534, 549, 563, 585, 603, 625, 643, 657, 669, 684, 702, 735, 748, 759, 785, 796, 813, 836, 851, 866, 876, 890, 905, 930, 941, 958, 971, 986, 1000, 1024, 1040, 1056, 1071, 1086, 1106, 1127, 1143, 1164, 1187, 1212, 1232, 1250, 1277, 1308, 1320}

func (i RuleId) String() string {
	if i < 0 || i >= RuleId(len(_RuleId_index)-1) {
		return "RuleId(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RuleId_name[_RuleId_index[i]:_RuleId_index[i+1]]
}
