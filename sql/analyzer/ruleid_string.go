// Code generated by "stringer -type=RuleId -linecomment"; DO NOT EDIT.

package analyzer

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[validateOffsetAndLimitId-0]
	_ = x[validateCreateTableId-1]
	_ = x[validateExprSemId-2]
	_ = x[resolveVariablesId-3]
	_ = x[resolveNamedWindowsId-4]
	_ = x[resolveSetVariablesId-5]
	_ = x[resolveViewsId-6]
	_ = x[liftCtesId-7]
	_ = x[resolveCtesId-8]
	_ = x[liftRecursiveCtesId-9]
	_ = x[resolveDatabasesId-10]
	_ = x[resolveTablesId-11]
	_ = x[loadStoredProceduresId-12]
	_ = x[validateDropTablesId-13]
	_ = x[setTargetSchemasId-14]
	_ = x[resolveCreateLikeId-15]
	_ = x[parseColumnDefaultsId-16]
	_ = x[resolveDropConstraintId-17]
	_ = x[validateDropConstraintId-18]
	_ = x[loadCheckConstraintsId-19]
	_ = x[resolveCreateSelectId-20]
	_ = x[resolveSubqueriesId-21]
	_ = x[setViewTargetSchemaId-22]
	_ = x[resolveUnionsId-23]
	_ = x[resolveDescribeQueryId-24]
	_ = x[checkUniqueTableNamesId-25]
	_ = x[resolveTableFunctionsId-26]
	_ = x[resolveDeclarationsId-27]
	_ = x[validateCreateTriggerId-28]
	_ = x[validateCreateProcedureId-29]
	_ = x[loadInfoSchemaId-30]
	_ = x[validateReadOnlyDatabaseId-31]
	_ = x[validateReadOnlyTransactionId-32]
	_ = x[validateDatabaseSetId-33]
	_ = x[validatePriviledgesId-34]
	_ = x[stripDecorationsId-35]
	_ = x[reresolveTablesId-36]
	_ = x[validateJoinComplexityId-37]
	_ = x[resolveNaturalJoinsId-38]
	_ = x[resolveOrderbyLiteralsId-39]
	_ = x[resolveFunctionsId-40]
	_ = x[flattenTableAliasesId-41]
	_ = x[pushdownSortId-42]
	_ = x[pushdownGroupbyAliasesId-43]
	_ = x[pushdownSubqueryAliasFiltersId-44]
	_ = x[qualifyColumnsId-45]
	_ = x[resolveColumnsId-46]
	_ = x[resolveColumnDefaultsId-47]
	_ = x[validateCheckConstraintId-48]
	_ = x[resolveBarewordSetVariablesId-49]
	_ = x[expandStarsId-50]
	_ = x[resolveHavingId-51]
	_ = x[mergeUnionSchemasId-52]
	_ = x[flattenAggregationExprsId-53]
	_ = x[reorderProjectionId-54]
	_ = x[resolveSubqueryExprsId-55]
	_ = x[replaceCrossJoinsId-56]
	_ = x[moveJoinCondsToFilterId-57]
	_ = x[evalFilterId-58]
	_ = x[optimizeDistinctId-59]
	_ = x[finalizeSubqueriesId-60]
	_ = x[finalizeUnionsId-61]
	_ = x[loadTriggersId-62]
	_ = x[processTruncateId-63]
	_ = x[resolveAlterColumnId-64]
	_ = x[resolveGeneratorsId-65]
	_ = x[removeUnnecessaryConvertsId-66]
	_ = x[assignCatalogId-67]
	_ = x[pruneColumnsId-68]
	_ = x[optimizeJoinsId-69]
	_ = x[pushdownFiltersId-70]
	_ = x[subqueryIndexesId-71]
	_ = x[inSubqueryIndexesId-72]
	_ = x[pushdownProjectionsId-73]
	_ = x[setJoinScopeLenId-74]
	_ = x[eraseProjectionId-75]
	_ = x[replaceSortPkId-76]
	_ = x[insertTopNId-77]
	_ = x[cacheSubqueryResultsId-78]
	_ = x[cacheSubqueryAliasesInJoinsId-79]
	_ = x[applyHashLookupsId-80]
	_ = x[applyHashInId-81]
	_ = x[resolveInsertRowsId-82]
	_ = x[resolvePreparedInsertId-83]
	_ = x[applyTriggersId-84]
	_ = x[applyProceduresId-85]
	_ = x[assignRoutinesId-86]
	_ = x[modifyUpdateExprsForJoinId-87]
	_ = x[applyRowUpdateAccumulatorsId-88]
	_ = x[wrapWithRollbackId-89]
	_ = x[applyFKsId-90]
	_ = x[validateResolvedId-91]
	_ = x[validateOrderById-92]
	_ = x[validateGroupById-93]
	_ = x[validateSchemaSourceId-94]
	_ = x[validateIndexCreationId-95]
	_ = x[validateOperandsId-96]
	_ = x[validateCaseResultTypesId-97]
	_ = x[validateIntervalUsageId-98]
	_ = x[validateExplodeUsageId-99]
	_ = x[validateSubqueryColumnsId-100]
	_ = x[validateUnionSchemasMatchId-101]
	_ = x[validateAggregationsId-102]
	_ = x[AutocommitId-103]
	_ = x[TrackProcessId-104]
	_ = x[parallelizeId-105]
	_ = x[clearWarningsId-106]
}

const _RuleId_name = "validateOffsetAndLimitvalidateCreateTablevalidateExprSemresolveVariablesresolveNamedWindowsresolveSetVariablesresolveViewsliftCtesresolveCtesliftRecursiveCtesresolveDatabasesresolveTablesloadStoredProceduresvalidateDropTablessetTargetSchemasresolveCreateLikeparseColumnDefaultsresolveDropConstraintvalidateDropConstraintloadCheckConstraintsresolveCreateSelectresolveSubqueriesresolveUnionsresolveDescribeQuerycheckUniqueTableNamesresolveTableFunctionsresolveDeclarationsvalidateCreateTriggervalidateCreateProcedureloadInfoSchemavalidateReadOnlyDatabasevalidateReadOnlyTransactionvalidateDatabaseSetvalidatePriviledgesstripDecorationsreresolveTablesvalidateJoinComplexityresolveNaturalJoinsresolveOrderbyLiteralsresolveFunctionsflattenTableAliasespushdownSortpushdownGroupbyAliasespushdownSubqueryAliasFiltersqualifyColumnsresolveColumnsresolveColumnDefaultsvalidateCheckConstraintresolveBarewordSetVariablesexpandStarsresolveHavingmergeUnionSchemasflattenAggregationExprsreorderProjectionresolveSubqueryExprsreplaceCrossJoinsmoveJoinCondsToFilterevalFilteroptimizeDistinctfinalizeSubqueriesfinalizeUnionsloadTriggersprocessTruncateresolveAlterColumnresolveGeneratorsremoveUnnecessaryConvertsassignCatalogpruneColumnsoptimizeJoinspushdownFilterssubqueryIndexesinSubqueryIndexespushdownProjectionssetJoinScopeLeneraseProjectionreplaceSortPkinsertTopNcacheSubqueryResultscacheSubqueryAliasesInJoinsapplyHashLookupsapplyHashInresolveInsertRowsresolvePreparedInsertapplyTriggersapplyProceduresassignRoutinesmodifyUpdateExprsForJoinapplyRowUpdateAccumulatorsrollback triggersapplyFKsvalidateResolvedvalidateOrderByvalidateGroupByvalidateSchemaSourcevalidateIndexCreationvalidateOperandsvalidateCaseResultTypesvalidateIntervalUsagevalidateExplodeUsagevalidateSubqueryColumnsvalidateUnionSchemasMatchvalidateAggregationsaddAutocommitNodetrackProcessparallelizeclearWarnings"

var _RuleId_index = [...]uint16{0, 22, 41, 56, 72, 91, 110, 122, 130, 141, 158, 174, 187, 207, 225, 241, 258, 277, 298, 320, 340, 359, 376, 376, 389, 409, 430, 451, 470, 491, 514, 528, 552, 579, 598, 617, 633, 648, 670, 689, 711, 727, 746, 758, 780, 808, 822, 836, 857, 880, 907, 918, 931, 948, 971, 988, 1008, 1025, 1046, 1056, 1072, 1090, 1104, 1116, 1131, 1149, 1166, 1191, 1204, 1216, 1229, 1244, 1259, 1276, 1295, 1310, 1325, 1338, 1348, 1368, 1395, 1411, 1422, 1439, 1460, 1473, 1488, 1502, 1526, 1552, 1569, 1577, 1593, 1608, 1623, 1643, 1664, 1680, 1703, 1724, 1744, 1767, 1792, 1812, 1829, 1841, 1852, 1865}

func (i RuleId) String() string {
	if i < 0 || i >= RuleId(len(_RuleId_index)-1) {
		return "RuleId(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RuleId_name[_RuleId_index[i]:_RuleId_index[i+1]]
}
