// Code generated by "stringer -type=RuleId -linecomment"; DO NOT EDIT.

package analyzer

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[applyDefaultSelectLimitId-0]
	_ = x[validateOffsetAndLimitId-1]
	_ = x[validateCreateTableId-2]
	_ = x[validateExprSemId-3]
	_ = x[resolveVariablesId-4]
	_ = x[resolveNamedWindowsId-5]
	_ = x[resolveSetVariablesId-6]
	_ = x[resolveViewsId-7]
	_ = x[liftCtesId-8]
	_ = x[resolveCtesId-9]
	_ = x[liftRecursiveCtesId-10]
	_ = x[resolveDatabasesId-11]
	_ = x[resolveTablesId-12]
	_ = x[loadStoredProceduresId-13]
	_ = x[validateDropTablesId-14]
	_ = x[setTargetSchemasId-15]
	_ = x[resolveCreateLikeId-16]
	_ = x[parseColumnDefaultsId-17]
	_ = x[resolveDropConstraintId-18]
	_ = x[validateDropConstraintId-19]
	_ = x[loadCheckConstraintsId-20]
	_ = x[assignCatalogId-21]
	_ = x[resolveAnalyzeTablesId-22]
	_ = x[resolveCreateSelectId-23]
	_ = x[resolveSubqueriesId-24]
	_ = x[setViewTargetSchemaId-25]
	_ = x[resolveUnionsId-26]
	_ = x[resolveDescribeQueryId-27]
	_ = x[checkUniqueTableNamesId-28]
	_ = x[disambiguateTableFunctionsId-29]
	_ = x[resolveTableFunctionsId-30]
	_ = x[resolveDeclarationsId-31]
	_ = x[resolveColumnDefaultsId-32]
	_ = x[validateColumnDefaultsId-33]
	_ = x[validateCreateTriggerId-34]
	_ = x[validateCreateProcedureId-35]
	_ = x[loadInfoSchemaId-36]
	_ = x[validateReadOnlyDatabaseId-37]
	_ = x[validateReadOnlyTransactionId-38]
	_ = x[validateDatabaseSetId-39]
	_ = x[validatePrivilegesId-40]
	_ = x[reresolveTablesId-41]
	_ = x[setInsertColumnsId-42]
	_ = x[validateJoinComplexityId-43]
	_ = x[applyBinlogReplicaControllerId-44]
	_ = x[resolveNaturalJoinsId-45]
	_ = x[resolveOrderbyLiteralsId-46]
	_ = x[resolveFunctionsId-47]
	_ = x[flattenTableAliasesId-48]
	_ = x[pushdownSortId-49]
	_ = x[pushdownGroupbyAliasesId-50]
	_ = x[pushdownSubqueryAliasFiltersId-51]
	_ = x[qualifyColumnsId-52]
	_ = x[resolveColumnsId-53]
	_ = x[validateCheckConstraintId-54]
	_ = x[resolveBarewordSetVariablesId-55]
	_ = x[replaceCountStarId-56]
	_ = x[expandStarsId-57]
	_ = x[transposeRightJoinsId-58]
	_ = x[resolveHavingId-59]
	_ = x[mergeUnionSchemasId-60]
	_ = x[flattenAggregationExprsId-61]
	_ = x[reorderProjectionId-62]
	_ = x[resolveSubqueryExprsId-63]
	_ = x[replaceCrossJoinsId-64]
	_ = x[moveJoinCondsToFilterId-65]
	_ = x[evalFilterId-66]
	_ = x[optimizeDistinctId-67]
	_ = x[hoistOutOfScopeFiltersId-68]
	_ = x[transformJoinApplyId-69]
	_ = x[hoistSelectExistsId-70]
	_ = x[finalizeSubqueriesId-71]
	_ = x[finalizeUnionsId-72]
	_ = x[loadTriggersId-73]
	_ = x[processTruncateId-74]
	_ = x[resolveAlterColumnId-75]
	_ = x[resolveGeneratorsId-76]
	_ = x[removeUnnecessaryConvertsId-77]
	_ = x[pruneColumnsId-78]
	_ = x[stripTableNameInDefaultsId-79]
	_ = x[foldEmptyJoinsId-80]
	_ = x[optimizeJoinsId-81]
	_ = x[pushdownFiltersId-82]
	_ = x[subqueryIndexesId-83]
	_ = x[pruneTablesId-84]
	_ = x[setJoinScopeLenId-85]
	_ = x[eraseProjectionId-86]
	_ = x[replaceSortPkId-87]
	_ = x[insertTopNId-88]
	_ = x[applyHashInId-89]
	_ = x[resolveInsertRowsId-90]
	_ = x[resolvePreparedInsertId-91]
	_ = x[applyTriggersId-92]
	_ = x[applyProceduresId-93]
	_ = x[assignRoutinesId-94]
	_ = x[modifyUpdateExprsForJoinId-95]
	_ = x[applyRowUpdateAccumulatorsId-96]
	_ = x[wrapWithRollbackId-97]
	_ = x[applyFKsId-98]
	_ = x[validateResolvedId-99]
	_ = x[validateOrderById-100]
	_ = x[validateGroupById-101]
	_ = x[validateSchemaSourceId-102]
	_ = x[validateIndexCreationId-103]
	_ = x[validateOperandsId-104]
	_ = x[validateCaseResultTypesId-105]
	_ = x[validateIntervalUsageId-106]
	_ = x[validateExplodeUsageId-107]
	_ = x[validateSubqueryColumnsId-108]
	_ = x[validateUnionSchemasMatchId-109]
	_ = x[validateAggregationsId-110]
	_ = x[validateDeleteFromId-111]
	_ = x[cacheSubqueryResultsId-112]
	_ = x[cacheSubqueryAliasesInJoinsId-113]
	_ = x[AutocommitId-114]
	_ = x[TrackProcessId-115]
	_ = x[parallelizeId-116]
	_ = x[clearWarningsId-117]
}

const _RuleId_name = "applyDefaultSelectLimitvalidateOffsetAndLimitvalidateCreateTablevalidateExprSemresolveVariablesresolveNamedWindowsresolveSetVariablesresolveViewsliftCtesresolveCtesliftRecursiveCtesresolveDatabasesresolveTablesloadStoredProceduresvalidateDropTablessetTargetSchemasresolveCreateLikeparseColumnDefaultsresolveDropConstraintvalidateDropConstraintloadCheckConstraintsassignCatalogresolveAnalyzeTablesresolveCreateSelectresolveSubqueriessetViewTargetSchemaresolveUnionsresolveDescribeQuerycheckUniqueTableNamesdisambiguateTableFunctionsresolveTableFunctionsresolveDeclarationsresolveColumnDefaultsvalidateColumnDefaultsvalidateCreateTriggervalidateCreateProcedureloadInfoSchemavalidateReadOnlyDatabasevalidateReadOnlyTransactionvalidateDatabaseSetvalidatePrivilegesreresolveTablessetInsertColumnsvalidateJoinComplexityapplyBinlogReplicaControllerresolveNaturalJoinsresolveOrderbyLiteralsresolveFunctionsflattenTableAliasespushdownSortpushdownGroupbyAliasespushdownSubqueryAliasFiltersqualifyColumnsresolveColumnsvalidateCheckConstraintresolveBarewordSetVariablesreplaceCountStarexpandStarstransposeRightJoinsresolveHavingmergeUnionSchemasflattenAggregationExprsreorderProjectionresolveSubqueryExprsreplaceCrossJoinsmoveJoinCondsToFilterevalFilteroptimizeDistincthoistOutOfScopeFilterstransformJoinApplyhoistSelectExistsfinalizeSubqueriesfinalizeUnionsloadTriggersprocessTruncateresolveAlterColumnresolveGeneratorsremoveUnnecessaryConvertspruneColumnsstripTableNamesFromColumnDefaultsfoldEmptyJoinsoptimizeJoinspushdownFilterssubqueryIndexespruneTablessetJoinScopeLeneraseProjectionreplaceSortPkinsertTopNapplyHashInresolveInsertRowsresolvePreparedInsertapplyTriggersapplyProceduresassignRoutinesmodifyUpdateExprsForJoinapplyRowUpdateAccumulatorsrollback triggersapplyFKsvalidateResolvedvalidateOrderByvalidateGroupByvalidateSchemaSourcevalidateIndexCreationvalidateOperandsvalidateCaseResultTypesvalidateIntervalUsagevalidateExplodeUsagevalidateSubqueryColumnsvalidateUnionSchemasMatchvalidateAggregationsvalidateDeleteFromcacheSubqueryResultscacheSubqueryAliasesInJoinsaddAutocommitNodetrackProcessparallelizeclearWarnings"

var _RuleId_index = [...]uint16{0, 23, 45, 64, 79, 95, 114, 133, 145, 153, 164, 181, 197, 210, 230, 248, 264, 281, 300, 321, 343, 363, 376, 396, 415, 432, 451, 464, 484, 505, 531, 552, 571, 592, 614, 635, 658, 672, 696, 723, 742, 760, 775, 791, 813, 841, 860, 882, 898, 917, 929, 951, 979, 993, 1007, 1030, 1057, 1073, 1084, 1103, 1116, 1133, 1156, 1173, 1193, 1210, 1231, 1241, 1257, 1279, 1297, 1314, 1332, 1346, 1358, 1373, 1391, 1408, 1433, 1445, 1478, 1492, 1505, 1520, 1535, 1546, 1561, 1576, 1589, 1599, 1610, 1627, 1648, 1661, 1676, 1690, 1714, 1740, 1757, 1765, 1781, 1796, 1811, 1831, 1852, 1868, 1891, 1912, 1932, 1955, 1980, 2000, 2018, 2038, 2065, 2082, 2094, 2105, 2118}

func (i RuleId) String() string {
	if i < 0 || i >= RuleId(len(_RuleId_index)-1) {
		return "RuleId(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RuleId_name[_RuleId_index[i]:_RuleId_index[i+1]]
}
