// Code generated by "stringer -type=RuleId -linecomment"; DO NOT EDIT.

package analyzer

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[applyDefaultSelectLimitId-0]
	_ = x[validateOffsetAndLimitId-1]
	_ = x[validateCreateTableId-2]
	_ = x[validateExprSemId-3]
	_ = x[resolveVariablesId-4]
	_ = x[resolveNamedWindowsId-5]
	_ = x[resolveSetVariablesId-6]
	_ = x[resolveViewsId-7]
	_ = x[liftCtesId-8]
	_ = x[resolveCtesId-9]
	_ = x[liftRecursiveCtesId-10]
	_ = x[resolveDatabasesId-11]
	_ = x[resolveTablesId-12]
	_ = x[loadStoredProceduresId-13]
	_ = x[validateDropTablesId-14]
	_ = x[setTargetSchemasId-15]
	_ = x[resolveCreateLikeId-16]
	_ = x[parseColumnDefaultsId-17]
	_ = x[resolveDropConstraintId-18]
	_ = x[validateDropConstraintId-19]
	_ = x[loadCheckConstraintsId-20]
	_ = x[resolveCreateSelectId-21]
	_ = x[resolveSubqueriesId-22]
	_ = x[setViewTargetSchemaId-23]
	_ = x[resolveUnionsId-24]
	_ = x[resolveDescribeQueryId-25]
	_ = x[checkUniqueTableNamesId-26]
	_ = x[resolveTableFunctionsId-27]
	_ = x[resolveDeclarationsId-28]
	_ = x[validateCreateTriggerId-29]
	_ = x[validateCreateProcedureId-30]
	_ = x[loadInfoSchemaId-31]
	_ = x[validateReadOnlyDatabaseId-32]
	_ = x[validateReadOnlyTransactionId-33]
	_ = x[validateDatabaseSetId-34]
	_ = x[validatePrivilegesId-35]
	_ = x[reresolveTablesId-36]
	_ = x[validateJoinComplexityId-37]
	_ = x[resolveNaturalJoinsId-38]
	_ = x[resolveOrderbyLiteralsId-39]
	_ = x[resolveFunctionsId-40]
	_ = x[flattenTableAliasesId-41]
	_ = x[pushdownSortId-42]
	_ = x[pushdownGroupbyAliasesId-43]
	_ = x[pushdownSubqueryAliasFiltersId-44]
	_ = x[qualifyColumnsId-45]
	_ = x[resolveColumnsId-46]
	_ = x[resolveColumnDefaultsId-47]
	_ = x[validateCheckConstraintId-48]
	_ = x[resolveBarewordSetVariablesId-49]
	_ = x[expandStarsId-50]
	_ = x[resolveHavingId-51]
	_ = x[mergeUnionSchemasId-52]
	_ = x[flattenAggregationExprsId-53]
	_ = x[reorderProjectionId-54]
	_ = x[resolveSubqueryExprsId-55]
	_ = x[finalizeSubqueryExprsId-56]
	_ = x[replaceCrossJoinsId-57]
	_ = x[moveJoinCondsToFilterId-58]
	_ = x[evalFilterId-59]
	_ = x[optimizeDistinctId-60]
	_ = x[finalizeSubqueriesId-61]
	_ = x[finalizeUnionsId-62]
	_ = x[loadTriggersId-63]
	_ = x[processTruncateId-64]
	_ = x[resolveAlterColumnId-65]
	_ = x[resolveGeneratorsId-66]
	_ = x[removeUnnecessaryConvertsId-67]
	_ = x[assignCatalogId-68]
	_ = x[pruneColumnsId-69]
	_ = x[hoistSelectExistsId-70]
	_ = x[optimizeJoinsId-71]
	_ = x[pushdownFiltersId-72]
	_ = x[subqueryIndexesId-73]
	_ = x[inSubqueryIndexesId-74]
	_ = x[pruneTablesId-75]
	_ = x[setJoinScopeLenId-76]
	_ = x[eraseProjectionId-77]
	_ = x[replaceSortPkId-78]
	_ = x[insertTopNId-79]
	_ = x[cacheSubqueryResultsId-80]
	_ = x[cacheSubqueryAliasesInJoinsId-81]
	_ = x[applyHashLookupsId-82]
	_ = x[applyHashInId-83]
	_ = x[resolveInsertRowsId-84]
	_ = x[resolvePreparedInsertId-85]
	_ = x[applyTriggersId-86]
	_ = x[applyProceduresId-87]
	_ = x[assignRoutinesId-88]
	_ = x[modifyUpdateExprsForJoinId-89]
	_ = x[applyRowUpdateAccumulatorsId-90]
	_ = x[wrapWithRollbackId-91]
	_ = x[applyFKsId-92]
	_ = x[fakeBlobIndexesId-93]
	_ = x[validateResolvedId-94]
	_ = x[validateOrderById-95]
	_ = x[validateGroupById-96]
	_ = x[validateSchemaSourceId-97]
	_ = x[validateIndexCreationId-98]
	_ = x[validateOperandsId-99]
	_ = x[validateCaseResultTypesId-100]
	_ = x[validateIntervalUsageId-101]
	_ = x[validateExplodeUsageId-102]
	_ = x[validateSubqueryColumnsId-103]
	_ = x[validateUnionSchemasMatchId-104]
	_ = x[validateAggregationsId-105]
	_ = x[AutocommitId-106]
	_ = x[TrackProcessId-107]
	_ = x[parallelizeId-108]
	_ = x[clearWarningsId-109]
}

const _RuleId_name = "applyDefaultSelectLimitvalidateOffsetAndLimitvalidateCreateTablevalidateExprSemresolveVariablesresolveNamedWindowsresolveSetVariablesresolveViewsliftCtesresolveCtesliftRecursiveCtesresolveDatabasesresolveTablesloadStoredProceduresvalidateDropTablessetTargetSchemasresolveCreateLikeparseColumnDefaultsresolveDropConstraintvalidateDropConstraintloadCheckConstraintsresolveCreateSelectresolveSubqueriessetViewTargetSchemaresolveUnionsresolveDescribeQuerycheckUniqueTableNamesresolveTableFunctionsresolveDeclarationsvalidateCreateTriggervalidateCreateProcedureloadInfoSchemavalidateReadOnlyDatabasevalidateReadOnlyTransactionvalidateDatabaseSetvalidatePrivilegesreresolveTablesvalidateJoinComplexityresolveNaturalJoinsresolveOrderbyLiteralsresolveFunctionsflattenTableAliasespushdownSortpushdownGroupbyAliasespushdownSubqueryAliasFiltersqualifyColumnsresolveColumnsresolveColumnDefaultsvalidateCheckConstraintresolveBarewordSetVariablesexpandStarsresolveHavingmergeUnionSchemasflattenAggregationExprsreorderProjectionresolveSubqueryExprsfinalizeSubqueryExprsreplaceCrossJoinsmoveJoinCondsToFilterevalFilteroptimizeDistinctfinalizeSubqueriesfinalizeUnionsloadTriggersprocessTruncateresolveAlterColumnresolveGeneratorsremoveUnnecessaryConvertsassignCatalogpruneColumnshoistSelectExistsoptimizeJoinspushdownFilterssubqueryIndexesinSubqueryIndexespruneTablessetJoinScopeLeneraseProjectionreplaceSortPkinsertTopNcacheSubqueryResultscacheSubqueryAliasesInJoinsapplyHashLookupsapplyHashInresolveInsertRowsresolvePreparedInsertapplyTriggersapplyProceduresassignRoutinesmodifyUpdateExprsForJoinapplyRowUpdateAccumulatorsrollback triggersapplyFKsadd sorts when accessing indexes on blobsvalidateResolvedvalidateOrderByvalidateGroupByvalidateSchemaSourcevalidateIndexCreationvalidateOperandsvalidateCaseResultTypesvalidateIntervalUsagevalidateExplodeUsagevalidateSubqueryColumnsvalidateUnionSchemasMatchvalidateAggregationsaddAutocommitNodetrackProcessparallelizeclearWarnings"

var _RuleId_index = [...]uint16{0, 23, 45, 64, 79, 95, 114, 133, 145, 153, 164, 181, 197, 210, 230, 248, 264, 281, 300, 321, 343, 363, 382, 399, 418, 431, 451, 472, 493, 512, 533, 556, 570, 594, 621, 640, 658, 673, 695, 714, 736, 752, 771, 783, 805, 833, 847, 861, 882, 905, 932, 943, 956, 973, 996, 1013, 1033, 1054, 1071, 1092, 1102, 1118, 1136, 1150, 1162, 1177, 1195, 1212, 1237, 1250, 1262, 1279, 1292, 1307, 1322, 1339, 1350, 1365, 1380, 1393, 1403, 1423, 1450, 1466, 1477, 1494, 1515, 1528, 1543, 1557, 1581, 1607, 1624, 1632, 1673, 1689, 1704, 1719, 1739, 1760, 1776, 1799, 1820, 1840, 1863, 1888, 1908, 1925, 1937, 1948, 1961}

func (i RuleId) String() string {
	if i < 0 || i >= RuleId(len(_RuleId_index)-1) {
		return "RuleId(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RuleId_name[_RuleId_index[i]:_RuleId_index[i+1]]
}
