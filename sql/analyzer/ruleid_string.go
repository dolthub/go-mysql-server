// Code generated by "stringer -type=RuleId -linecomment"; DO NOT EDIT.

package analyzer

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[applyDefaultSelectLimitId-0]
	_ = x[validateOffsetAndLimitId-1]
	_ = x[validateCreateTableId-2]
	_ = x[validateExprSemId-3]
	_ = x[resolveVariablesId-4]
	_ = x[resolveNamedWindowsId-5]
	_ = x[resolveSetVariablesId-6]
	_ = x[resolveViewsId-7]
	_ = x[liftCtesId-8]
	_ = x[resolveCtesId-9]
	_ = x[liftRecursiveCtesId-10]
	_ = x[resolveDatabasesId-11]
	_ = x[resolveTablesId-12]
	_ = x[loadStoredProceduresId-13]
	_ = x[validateDropTablesId-14]
	_ = x[setTargetSchemasId-15]
	_ = x[resolveCreateLikeId-16]
	_ = x[parseColumnDefaultsId-17]
	_ = x[resolveDropConstraintId-18]
	_ = x[validateDropConstraintId-19]
	_ = x[loadCheckConstraintsId-20]
	_ = x[assignCatalogId-21]
	_ = x[resolveAnalyzeTablesId-22]
	_ = x[resolveCreateSelectId-23]
	_ = x[resolveSubqueriesId-24]
	_ = x[setViewTargetSchemaId-25]
	_ = x[resolveUnionsId-26]
	_ = x[resolveDescribeQueryId-27]
	_ = x[checkUniqueTableNamesId-28]
	_ = x[resolveTableFunctionsId-29]
	_ = x[resolveDeclarationsId-30]
	_ = x[resolveColumnDefaultsId-31]
	_ = x[validateColumnDefaultsId-32]
	_ = x[validateCreateTriggerId-33]
	_ = x[validateCreateProcedureId-34]
	_ = x[loadInfoSchemaId-35]
	_ = x[validateReadOnlyDatabaseId-36]
	_ = x[validateReadOnlyTransactionId-37]
	_ = x[validateDatabaseSetId-38]
	_ = x[validatePrivilegesId-39]
	_ = x[reresolveTablesId-40]
	_ = x[setInsertColumnsId-41]
	_ = x[validateJoinComplexityId-42]
	_ = x[applyBinlogReplicaControllerId-43]
	_ = x[resolveNaturalJoinsId-44]
	_ = x[resolveOrderbyLiteralsId-45]
	_ = x[resolveFunctionsId-46]
	_ = x[flattenTableAliasesId-47]
	_ = x[pushdownSortId-48]
	_ = x[pushdownGroupbyAliasesId-49]
	_ = x[pushdownSubqueryAliasFiltersId-50]
	_ = x[qualifyColumnsId-51]
	_ = x[resolveColumnsId-52]
	_ = x[validateCheckConstraintId-53]
	_ = x[resolveBarewordSetVariablesId-54]
	_ = x[replaceCountStarId-55]
	_ = x[expandStarsId-56]
	_ = x[transposeRightJoinsId-57]
	_ = x[resolveHavingId-58]
	_ = x[mergeUnionSchemasId-59]
	_ = x[flattenAggregationExprsId-60]
	_ = x[reorderProjectionId-61]
	_ = x[resolveSubqueryExprsId-62]
	_ = x[replaceCrossJoinsId-63]
	_ = x[moveJoinCondsToFilterId-64]
	_ = x[evalFilterId-65]
	_ = x[optimizeDistinctId-66]
	_ = x[hoistOutOfScopeFiltersId-67]
	_ = x[transformJoinApplyId-68]
	_ = x[hoistSelectExistsId-69]
	_ = x[finalizeSubqueriesId-70]
	_ = x[finalizeUnionsId-71]
	_ = x[loadTriggersId-72]
	_ = x[processTruncateId-73]
	_ = x[resolveAlterColumnId-74]
	_ = x[resolveGeneratorsId-75]
	_ = x[removeUnnecessaryConvertsId-76]
	_ = x[pruneColumnsId-77]
	_ = x[stripTableNameInDefaultsId-78]
	_ = x[foldEmptyJoinsId-79]
	_ = x[optimizeJoinsId-80]
	_ = x[pushdownFiltersId-81]
	_ = x[subqueryIndexesId-82]
	_ = x[pruneTablesId-83]
	_ = x[setJoinScopeLenId-84]
	_ = x[eraseProjectionId-85]
	_ = x[replaceSortPkId-86]
	_ = x[insertTopNId-87]
	_ = x[applyHashInId-88]
	_ = x[resolveInsertRowsId-89]
	_ = x[resolvePreparedInsertId-90]
	_ = x[applyTriggersId-91]
	_ = x[applyProceduresId-92]
	_ = x[assignRoutinesId-93]
	_ = x[modifyUpdateExprsForJoinId-94]
	_ = x[applyRowUpdateAccumulatorsId-95]
	_ = x[wrapWithRollbackId-96]
	_ = x[applyFKsId-97]
	_ = x[validateResolvedId-98]
	_ = x[validateOrderById-99]
	_ = x[validateGroupById-100]
	_ = x[validateSchemaSourceId-101]
	_ = x[validateIndexCreationId-102]
	_ = x[validateOperandsId-103]
	_ = x[validateCaseResultTypesId-104]
	_ = x[validateIntervalUsageId-105]
	_ = x[validateExplodeUsageId-106]
	_ = x[validateSubqueryColumnsId-107]
	_ = x[validateUnionSchemasMatchId-108]
	_ = x[validateAggregationsId-109]
	_ = x[validateDeleteFromId-110]
	_ = x[cacheSubqueryResultsId-111]
	_ = x[cacheSubqueryAliasesInJoinsId-112]
	_ = x[AutocommitId-113]
	_ = x[TrackProcessId-114]
	_ = x[parallelizeId-115]
	_ = x[clearWarningsId-116]
}

const _RuleId_name = "applyDefaultSelectLimitvalidateOffsetAndLimitvalidateCreateTablevalidateExprSemresolveVariablesresolveNamedWindowsresolveSetVariablesresolveViewsliftCtesresolveCtesliftRecursiveCtesresolveDatabasesresolveTablesloadStoredProceduresvalidateDropTablessetTargetSchemasresolveCreateLikeparseColumnDefaultsresolveDropConstraintvalidateDropConstraintloadCheckConstraintsassignCatalogresolveAnalyzeTablesresolveCreateSelectresolveSubqueriessetViewTargetSchemaresolveUnionsresolveDescribeQuerycheckUniqueTableNamesresolveTableFunctionsresolveDeclarationsresolveColumnDefaultsvalidateColumnDefaultsvalidateCreateTriggervalidateCreateProcedureloadInfoSchemavalidateReadOnlyDatabasevalidateReadOnlyTransactionvalidateDatabaseSetvalidatePrivilegesreresolveTablessetInsertColumnsvalidateJoinComplexityapplyBinlogReplicaControllerresolveNaturalJoinsresolveOrderbyLiteralsresolveFunctionsflattenTableAliasespushdownSortpushdownGroupbyAliasespushdownSubqueryAliasFiltersqualifyColumnsresolveColumnsvalidateCheckConstraintresolveBarewordSetVariablesreplaceCountStarexpandStarstransposeRightJoinsresolveHavingmergeUnionSchemasflattenAggregationExprsreorderProjectionresolveSubqueryExprsreplaceCrossJoinsmoveJoinCondsToFilterevalFilteroptimizeDistincthoistOutOfScopeFilterstransformJoinApplyhoistSelectExistsfinalizeSubqueriesfinalizeUnionsloadTriggersprocessTruncateresolveAlterColumnresolveGeneratorsremoveUnnecessaryConvertspruneColumnsstripTableNamesFromColumnDefaultsfoldEmptyJoinsoptimizeJoinspushdownFilterssubqueryIndexespruneTablessetJoinScopeLeneraseProjectionreplaceSortPkinsertTopNapplyHashInresolveInsertRowsresolvePreparedInsertapplyTriggersapplyProceduresassignRoutinesmodifyUpdateExprsForJoinapplyRowUpdateAccumulatorsrollback triggersapplyFKsvalidateResolvedvalidateOrderByvalidateGroupByvalidateSchemaSourcevalidateIndexCreationvalidateOperandsvalidateCaseResultTypesvalidateIntervalUsagevalidateExplodeUsagevalidateSubqueryColumnsvalidateUnionSchemasMatchvalidateAggregationsvalidateDeleteFromcacheSubqueryResultscacheSubqueryAliasesInJoinsaddAutocommitNodetrackProcessparallelizeclearWarnings"

var _RuleId_index = [...]uint16{0, 23, 45, 64, 79, 95, 114, 133, 145, 153, 164, 181, 197, 210, 230, 248, 264, 281, 300, 321, 343, 363, 376, 396, 415, 432, 451, 464, 484, 505, 526, 545, 566, 588, 609, 632, 646, 670, 697, 716, 734, 749, 765, 787, 815, 834, 856, 872, 891, 903, 925, 953, 967, 981, 1004, 1031, 1047, 1058, 1077, 1090, 1107, 1130, 1147, 1167, 1184, 1205, 1215, 1231, 1253, 1271, 1288, 1306, 1320, 1332, 1347, 1365, 1382, 1407, 1419, 1452, 1466, 1479, 1494, 1509, 1520, 1535, 1550, 1563, 1573, 1584, 1601, 1622, 1635, 1650, 1664, 1688, 1714, 1731, 1739, 1755, 1770, 1785, 1805, 1826, 1842, 1865, 1886, 1906, 1929, 1954, 1974, 1992, 2012, 2039, 2056, 2068, 2079, 2092}

func (i RuleId) String() string {
	if i < 0 || i >= RuleId(len(_RuleId_index)-1) {
		return "RuleId(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RuleId_name[_RuleId_index[i]:_RuleId_index[i+1]]
}
