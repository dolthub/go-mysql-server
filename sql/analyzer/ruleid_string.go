// Code generated by "stringer -type=RuleId -linecomment"; DO NOT EDIT.

package analyzer

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[applyDefaultSelectLimitId-0]
	_ = x[validateOffsetAndLimitId-1]
	_ = x[validateStarExpressionsId-2]
	_ = x[validateCreateTableId-3]
	_ = x[validateAlterTableId-4]
	_ = x[validateExprSemId-5]
	_ = x[loadStoredProceduresId-6]
	_ = x[validateDropTablesId-7]
	_ = x[resolveDropConstraintId-8]
	_ = x[validateDropConstraintId-9]
	_ = x[resolveCreateSelectId-10]
	_ = x[resolveSubqueriesId-11]
	_ = x[resolveUnionsId-12]
	_ = x[ValidateColumnDefaultsId-13]
	_ = x[validateCreateTriggerId-14]
	_ = x[validateReadOnlyDatabaseId-15]
	_ = x[validateReadOnlyTransactionId-16]
	_ = x[validateDatabaseSetId-17]
	_ = x[validatePrivilegesId-18]
	_ = x[flattenTableAliasesId-19]
	_ = x[pushdownSubqueryAliasFiltersId-20]
	_ = x[validateCheckConstraintId-21]
	_ = x[replaceCountStarId-22]
	_ = x[replaceCrossJoinsId-23]
	_ = x[moveJoinCondsToFilterId-24]
	_ = x[simplifyFiltersId-25]
	_ = x[pushNotFiltersId-26]
	_ = x[hoistOutOfScopeFiltersId-27]
	_ = x[unnestInSubqueriesId-28]
	_ = x[unnestExistsSubqueriesId-29]
	_ = x[finalizeSubqueriesId-30]
	_ = x[finalizeUnionsId-31]
	_ = x[loadTriggersId-32]
	_ = x[processTruncateId-33]
	_ = x[resolveAlterColumnId-34]
	_ = x[stripTableNameInDefaultsId-35]
	_ = x[optimizeJoinsId-36]
	_ = x[pushFiltersId-37]
	_ = x[applyIndexesFromOuterScopeId-38]
	_ = x[pruneTablesId-39]
	_ = x[assignExecIndexesId-40]
	_ = x[inlineSubqueryAliasRefsId-41]
	_ = x[eraseProjectionId-42]
	_ = x[flattenDistinctId-43]
	_ = x[replaceAggId-44]
	_ = x[replaceIdxSortId-45]
	_ = x[insertTopNId-46]
	_ = x[replaceIdxOrderByDistanceId-47]
	_ = x[applyHashInId-48]
	_ = x[resolveInsertRowsId-49]
	_ = x[applyTriggersId-50]
	_ = x[applyProceduresId-51]
	_ = x[assignRoutinesId-52]
	_ = x[modifyUpdateExprsForJoinId-53]
	_ = x[applyForeignKeysId-54]
	_ = x[validateResolvedId-55]
	_ = x[validateOrderById-56]
	_ = x[validateGroupById-57]
	_ = x[validateSchemaSourceId-58]
	_ = x[validateIndexCreationId-59]
	_ = x[ValidateOperandsId-60]
	_ = x[validateIntervalUsageId-61]
	_ = x[validateSubqueryColumnsId-62]
	_ = x[validateUnionSchemasMatchId-63]
	_ = x[validateAggregationsId-64]
	_ = x[validateDeleteFromId-65]
	_ = x[cacheSubqueryAliasesInJoinsId-66]
	_ = x[BacktickDefaulColumnValueNamesId-67]
	_ = x[TrackProcessId-68]
}

const _RuleId_name = "applyDefaultSelectLimitvalidateOffsetAndLimitvalidateStarExpressionsvalidateCreateTablevalidateAlterTablevalidateExprSemloadStoredProceduresvalidateDropTablesresolveDropConstraintvalidateDropConstraintresolveCreateSelectresolveSubqueriesresolveUnionsvalidateColumnDefaultsvalidateCreateTriggervalidateReadOnlyDatabasevalidateReadOnlyTransactionvalidateDatabaseSetvalidatePrivilegesflattenTableAliasespushdownSubqueryAliasFiltersvalidateCheckConstraintsreplaceCountStarreplaceCrossJoinsmoveJoinConditionsToFiltersimplifyFilterspushNotFiltershoistOutOfScopeFiltersunnestInSubqueriesunnestExistsSubqueriesfinalizeSubqueriesfinalizeUnionsloadTriggersprocessTruncateresolveAlterColumnstripTableNamesFromColumnDefaultsoptimizeJoinspushFiltersapplyIndexesFromOuterScopepruneTablesassignExecIndexesinlineSubqueryAliasRefseraseProjectionflattenDistinctreplaceAggreplaceIdxSortinsertTopNNodesreplaceIdxOrderByDistanceapplyHashInresolveInsertRowsapplyTriggersapplyProceduresassignRoutinesmodifyUpdateExprsForJoinapplyForeignKeysvalidateResolvedvalidateOrderByvalidateGroupByvalidateSchemaSourcevalidateIndexCreationvalidateOperandsvalidateIntervalUsagevalidateSubqueryColumnsvalidateUnionSchemasMatchvalidateAggregationsvalidateDeleteFromcacheSubqueryAliasesInJoinsbacktickDefaultColumnValueNamestrackProcess"

var _RuleId_index = [...]uint16{0, 23, 45, 68, 87, 105, 120, 140, 158, 179, 201, 220, 237, 250, 272, 293, 317, 344, 363, 381, 400, 428, 452, 468, 485, 511, 526, 540, 562, 580, 602, 620, 634, 646, 661, 679, 712, 725, 736, 762, 773, 790, 813, 828, 843, 853, 867, 882, 907, 918, 935, 948, 963, 977, 1001, 1017, 1033, 1048, 1063, 1083, 1104, 1120, 1141, 1164, 1189, 1209, 1227, 1254, 1285, 1297}

func (i RuleId) String() string {
	if i < 0 || i >= RuleId(len(_RuleId_index)-1) {
		return "RuleId(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RuleId_name[_RuleId_index[i]:_RuleId_index[i+1]]
}
