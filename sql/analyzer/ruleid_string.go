// Code generated by "stringer -type=RuleId -linecomment"; DO NOT EDIT.

package analyzer

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[applyDefaultSelectLimitId-0]
	_ = x[validateOffsetAndLimitId-1]
	_ = x[validateStarExpressionsId-2]
	_ = x[validateCreateTableId-3]
	_ = x[validateAlterTableId-4]
	_ = x[validateExprSemId-5]
	_ = x[resolveVariablesId-6]
	_ = x[resolveNamedWindowsId-7]
	_ = x[resolveSetVariablesId-8]
	_ = x[resolveViewsId-9]
	_ = x[liftCtesId-10]
	_ = x[resolveCtesId-11]
	_ = x[liftRecursiveCtesId-12]
	_ = x[resolveDatabasesId-13]
	_ = x[resolveTablesId-14]
	_ = x[loadStoredProceduresId-15]
	_ = x[validateDropTablesId-16]
	_ = x[pruneDropTablesId-17]
	_ = x[setTargetSchemasId-18]
	_ = x[resolveCreateLikeId-19]
	_ = x[parseColumnDefaultsId-20]
	_ = x[resolveDropConstraintId-21]
	_ = x[validateDropConstraintId-22]
	_ = x[loadCheckConstraintsId-23]
	_ = x[assignCatalogId-24]
	_ = x[resolveAnalyzeTablesId-25]
	_ = x[resolveCreateSelectId-26]
	_ = x[resolveSubqueriesId-27]
	_ = x[setViewTargetSchemaId-28]
	_ = x[resolveUnionsId-29]
	_ = x[resolveDescribeQueryId-30]
	_ = x[checkUniqueTableNamesId-31]
	_ = x[resolveTableFunctionsId-32]
	_ = x[resolveDeclarationsId-33]
	_ = x[resolveColumnDefaultsId-34]
	_ = x[validateColumnDefaultsId-35]
	_ = x[validateCreateTriggerId-36]
	_ = x[validateCreateProcedureId-37]
	_ = x[resolveCreateProcedureId-38]
	_ = x[loadInfoSchemaId-39]
	_ = x[validateReadOnlyDatabaseId-40]
	_ = x[validateReadOnlyTransactionId-41]
	_ = x[validateDatabaseSetId-42]
	_ = x[validatePrivilegesId-43]
	_ = x[reresolveTablesId-44]
	_ = x[setInsertColumnsId-45]
	_ = x[validateJoinComplexityId-46]
	_ = x[applyBinlogReplicaControllerId-47]
	_ = x[applyEventSchedulerId-48]
	_ = x[resolveUsingJoinsId-49]
	_ = x[resolveOrderbyLiteralsId-50]
	_ = x[resolveFunctionsId-51]
	_ = x[flattenTableAliasesId-52]
	_ = x[pushdownSortId-53]
	_ = x[pushdownGroupbyAliasesId-54]
	_ = x[pushdownSubqueryAliasFiltersId-55]
	_ = x[qualifyColumnsId-56]
	_ = x[resolveColumnsId-57]
	_ = x[validateCheckConstraintId-58]
	_ = x[resolveBarewordSetVariablesId-59]
	_ = x[replaceCountStarId-60]
	_ = x[expandStarsId-61]
	_ = x[transposeRightJoinsId-62]
	_ = x[resolveHavingId-63]
	_ = x[mergeUnionSchemasId-64]
	_ = x[flattenAggregationExprsId-65]
	_ = x[reorderProjectionId-66]
	_ = x[resolveSubqueryExprsId-67]
	_ = x[replaceCrossJoinsId-68]
	_ = x[moveJoinCondsToFilterId-69]
	_ = x[moveFiltersToJoinCondId-70]
	_ = x[simplifyFiltersId-71]
	_ = x[pushNotFiltersId-72]
	_ = x[optimizeDistinctId-73]
	_ = x[hoistOutOfScopeFiltersId-74]
	_ = x[unnestInSubqueriesId-75]
	_ = x[unnestExistsSubqueriesId-76]
	_ = x[finalizeSubqueriesId-77]
	_ = x[finalizeUnionsId-78]
	_ = x[loadTriggersId-79]
	_ = x[loadEventsId-80]
	_ = x[processTruncateId-81]
	_ = x[resolveAlterColumnId-82]
	_ = x[resolveGeneratorsId-83]
	_ = x[removeUnnecessaryConvertsId-84]
	_ = x[pruneColumnsId-85]
	_ = x[stripTableNameInDefaultsId-86]
	_ = x[foldEmptyJoinsId-87]
	_ = x[optimizeJoinsId-88]
	_ = x[generateIndexScansId-89]
	_ = x[matchAgainstId-90]
	_ = x[pushFiltersId-91]
	_ = x[applyIndexesFromOuterScopeId-92]
	_ = x[pruneTablesId-93]
	_ = x[fixupAuxiliaryExprsId-94]
	_ = x[assignExecIndexesId-95]
	_ = x[inlineSubqueryAliasRefsId-96]
	_ = x[eraseProjectionId-97]
	_ = x[flattenDistinctId-98]
	_ = x[replaceAggId-99]
	_ = x[replaceIdxSortId-100]
	_ = x[insertTopNId-101]
	_ = x[applyHashInId-102]
	_ = x[resolveInsertRowsId-103]
	_ = x[resolvePreparedInsertId-104]
	_ = x[applyTriggersId-105]
	_ = x[applyProceduresId-106]
	_ = x[assignRoutinesId-107]
	_ = x[modifyUpdateExprsForJoinId-108]
	_ = x[applyRowUpdateAccumulatorsId-109]
	_ = x[wrapWithRollbackId-110]
	_ = x[applyFKsId-111]
	_ = x[validateResolvedId-112]
	_ = x[validateOrderById-113]
	_ = x[validateGroupById-114]
	_ = x[validateSchemaSourceId-115]
	_ = x[validateIndexCreationId-116]
	_ = x[validateOperandsId-117]
	_ = x[validateCaseResultTypesId-118]
	_ = x[validateIntervalUsageId-119]
	_ = x[validateExplodeUsageId-120]
	_ = x[validateSubqueryColumnsId-121]
	_ = x[validateUnionSchemasMatchId-122]
	_ = x[validateAggregationsId-123]
	_ = x[validateDeleteFromId-124]
	_ = x[cacheSubqueryResultsId-125]
	_ = x[cacheSubqueryAliasesInJoinsId-126]
	_ = x[backtickDefaulColumnValueNamesId-127]
	_ = x[AutocommitId-128]
	_ = x[TrackProcessId-129]
	_ = x[parallelizeId-130]
	_ = x[clearWarningsId-131]
}

const _RuleId_name = "applyDefaultSelectLimitvalidateOffsetAndLimitvalidateStarExpressionsvalidateCreateTablevalidateAlterTablevalidateExprSemresolveVariablesresolveNamedWindowsresolveSetVariablesresolveViewsliftCtesresolveCtesliftRecursiveCtesresolveDatabasesresolveTablesloadStoredProceduresvalidateDropTablespruneDropTablessetTargetSchemasresolveCreateLikeparseColumnDefaultsresolveDropConstraintvalidateDropConstraintloadCheckConstraintsassignCatalogresolveAnalyzeTablesresolveCreateSelectresolveSubqueriessetViewTargetSchemaresolveUnionsresolveDescribeQuerycheckUniqueTableNamesresolveTableFunctionsresolveDeclarationsresolveColumnDefaultsvalidateColumnDefaultsvalidateCreateTriggervalidateCreateProcedureresolveCreateProcedureloadInfoSchemavalidateReadOnlyDatabasevalidateReadOnlyTransactionvalidateDatabaseSetvalidatePrivilegesreresolveTablessetInsertColumnsvalidateJoinComplexityapplyBinlogReplicaControllerapplyEventSchedulerresolveUsingJoinsresolveOrderbyLiteralsresolveFunctionsflattenTableAliasespushdownSortpushdownGroupbyAliasespushdownSubqueryAliasFiltersqualifyColumnsresolveColumnsvalidateCheckConstraintresolveBarewordSetVariablesreplaceCountStarexpandStarstransposeRightJoinsresolveHavingmergeUnionSchemasflattenAggregationExprsreorderProjectionresolveSubqueryExprsreplaceCrossJoinsmoveJoinCondsToFiltermoveFiltersToJoinCondsimplifyFilterspushNotFiltersoptimizeDistincthoistOutOfScopeFiltersunnestInSubqueriesunnestExistsSubqueriesfinalizeSubqueriesfinalizeUnionsloadTriggersloadEventsprocessTruncateresolveAlterColumnresolveGeneratorsremoveUnnecessaryConvertspruneColumnsstripTableNamesFromColumnDefaultsfoldEmptyJoinsoptimizeJoinsgenerateIndexScansmatchAgainstpushFiltersapplyIndexesFromOuterScopepruneTablesfixupAuxiliaryExprsassignExecIndexesinlineSubqueryAliasRefseraseProjectionflattenDistinctreplaceAggreplaceIdxSortinsertTopNapplyHashInresolveInsertRowsresolvePreparedInsertapplyTriggersapplyProceduresassignRoutinesmodifyUpdateExprsForJoinapplyRowUpdateAccumulatorsrollback triggersapplyFKsvalidateResolvedvalidateOrderByvalidateGroupByvalidateSchemaSourcevalidateIndexCreationvalidateOperandsvalidateCaseResultTypesvalidateIntervalUsagevalidateExplodeUsagevalidateSubqueryColumnsvalidateUnionSchemasMatchvalidateAggregationsvalidateDeleteFromcacheSubqueryResultscacheSubqueryAliasesInJoinsbacktickDefaulColumnValueNamesaddAutocommitNodetrackProcessparallelizeclearWarnings"

var _RuleId_index = [...]uint16{0, 23, 45, 68, 87, 105, 120, 136, 155, 174, 186, 194, 205, 222, 238, 251, 271, 289, 304, 320, 337, 356, 377, 399, 419, 432, 452, 471, 488, 507, 520, 540, 561, 582, 601, 622, 644, 665, 688, 710, 724, 748, 775, 794, 812, 827, 843, 865, 893, 912, 929, 951, 967, 986, 998, 1020, 1048, 1062, 1076, 1099, 1126, 1142, 1153, 1172, 1185, 1202, 1225, 1242, 1262, 1279, 1300, 1321, 1336, 1350, 1366, 1388, 1406, 1428, 1446, 1460, 1472, 1482, 1497, 1515, 1532, 1557, 1569, 1602, 1616, 1629, 1647, 1659, 1670, 1696, 1707, 1726, 1743, 1766, 1781, 1796, 1806, 1820, 1830, 1841, 1858, 1879, 1892, 1907, 1921, 1945, 1971, 1988, 1996, 2012, 2027, 2042, 2062, 2083, 2099, 2122, 2143, 2163, 2186, 2211, 2231, 2249, 2269, 2296, 2326, 2343, 2355, 2366, 2379}

func (i RuleId) String() string {
	if i < 0 || i >= RuleId(len(_RuleId_index)-1) {
		return "RuleId(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RuleId_name[_RuleId_index[i]:_RuleId_index[i+1]]
}
