// Code generated by "stringer -type=HintType -linecomment"; DO NOT EDIT.

package memo

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[HintTypeUnknown-0]
	_ = x[HintTypeJoinOrder-1]
	_ = x[HintTypeJoinFixedOrder-2]
	_ = x[HintTypeMergeJoin-3]
	_ = x[HintTypeLookupJoin-4]
	_ = x[HintTypeHashJoin-5]
	_ = x[HintTypeSemiJoin-6]
	_ = x[HintTypeAntiJoin-7]
	_ = x[HintTypeInnerJoin-8]
	_ = x[HintTypeLeftOuterLookupJoin-9]
	_ = x[HintTypeNoIndexConditionPushDown-10]
}

const _HintType_name = "JOIN_ORDERJOIN_FIXED_ORDERMERGE_JOINLOOKUP_JOINHASH_JOINSEMI_JOINANTI_JOININNER_JOINLEFT_OUTER_LOOKUP_JOINNO_ICP"

var _HintType_index = [...]uint8{0, 0, 10, 26, 36, 47, 56, 65, 74, 84, 106, 112}

func (i HintType) String() string {
	if i >= HintType(len(_HintType_index)-1) {
		return "HintType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _HintType_name[_HintType_index[i]:_HintType_index[i+1]]
}
